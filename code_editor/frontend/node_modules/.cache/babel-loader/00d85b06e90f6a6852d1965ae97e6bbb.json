{"ast":null,"code":"var _jsxFileName = \"/home/anasbouzid/code-projects/streamlit/custom-components/CodeEditor/code_editor/frontend/src/editor.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport AceEditor from \"react-ace\";\nimport ace from \"ace-builds\";\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/ext-prompt\";\nimport \"ace-builds/src-noconflict/ext-modelist\";\nimport \"ace-builds/src-noconflict/ext-keybinding_menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Editor = _ref => {\n  _s();\n  let {\n    lang,\n    theme,\n    shortcuts,\n    props,\n    snippetString,\n    commands,\n    keybindingString,\n    editorRef,\n    code,\n    onChange\n  } = _ref;\n  useEffect(() => {\n    console.log(\"editor mounted\");\n    return () => {\n      console.log(\"editor unmounted\");\n    };\n  }, []);\n  useEffect(() => {\n    console.log(\"~~~~~ useEffect inside Editor ~~~~~\");\n    //console.log(aceEditor.current?.editor);\n    if (editorRef.current) {\n      console.log(editorRef.current.editor.getSession().$modeId);\n      console.log(editorRef.current.editor.commands);\n      ace.require('ace/autocomplete').Autocomplete.for(editorRef.current.editor);\n      const keybindings = JSON.parse(keybindingString);\n      console.log(keybindings);\n      if (keybindings.commands && keybindings.commands.length > 0) {\n        keybindings.commands.forEach(binding => {\n          // (editorRef.current.editor as ace.Ace.Editor).commands.bindKey(binding.bindkey, binding.name, undefined);\n          console.log(typeof editorRef.current.editor.commands.bindkey);\n          editorRef.current.editor.commands.bindkey(binding.bindkey, binding.name, undefined);\n        });\n      }\n      console.log(editorRef.current.editor);\n      if (keybindings.completer && keybindings.completer.length > 0) {\n        keybindings.completer.forEach(binding => {\n          editorRef.current.editor.completer.keyboardBinding.bindkey(binding.bindkey, binding.name);\n        });\n      }\n      ace.require(\"ace/ext/keybinding_menu\").init(editorRef.current.editor);\n      console.log(editorRef.current.editor);\n      const snippetManager = ace.require('ace/snippets').snippetManager;\n      const snippets = JSON.parse(snippetString);\n      for (const [snippetsLang, snippetsAddRemove] of Object.entries(snippets)) {\n        console.log(\"new snippets\");\n        console.log(snippetsLang);\n        console.log(snippetsAddRemove);\n        if (snippetsAddRemove[0]) {\n          snippetManager.register(snippetManager.parseSnippetFile(snippetsAddRemove[0], snippetsLang), snippetsLang);\n          console.log(snippetManager);\n        } else {\n          console.log(\"Cannot register snippets: check format of snippets\");\n        }\n        if (snippetsAddRemove[1]) {\n          console.log(\"snippets to remove\");\n          console.log(snippetManager.parseSnippetFile(snippetsAddRemove[1], snippetsLang));\n          console.log(snippetManager.parseSnippetFile(snippetManager.files['ace/mode/' + snippetsLang].snippetText, snippetsLang));\n          snippetManager.unregister(snippetManager.parseSnippetFile(snippetsAddRemove[1], snippetsLang), snippetsLang);\n          console.log(snippetManager);\n        } else {\n          console.log(\"Cannot unregister snippets: check format of snippets\");\n        }\n      }\n    } else {\n      console.log(\"No editor to register/unregister snippets to\");\n    }\n  }, [snippetString, keybindingString]);\n  return /*#__PURE__*/_jsxDEV(AceEditor, {\n    ref: editorRef,\n    name: \"REACT_ACE_EDITOR\",\n    mode: lang,\n    theme: theme,\n    value: code,\n    keyboardHandler: shortcuts,\n    commands: commands,\n    onChange: onChange,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 11\n  }, this);\n};\n_s(Editor, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["useEffect","AceEditor","ace","Editor","lang","theme","shortcuts","props","snippetString","commands","keybindingString","editorRef","code","onChange","console","log","current","editor","getSession","$modeId","require","Autocomplete","for","keybindings","JSON","parse","length","forEach","binding","bindkey","name","undefined","completer","keyboardBinding","init","snippetManager","snippets","snippetsLang","snippetsAddRemove","Object","entries","register","parseSnippetFile","files","snippetText","unregister"],"sources":["/home/anasbouzid/code-projects/streamlit/custom-components/CodeEditor/code_editor/frontend/src/editor.tsx"],"sourcesContent":["import { useEffect} from \"react\"\nimport AceEditor from \"react-ace\";\nimport ace from \"ace-builds\";\n\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/ext-prompt\";\nimport \"ace-builds/src-noconflict/ext-modelist\";\nimport \"ace-builds/src-noconflict/ext-keybinding_menu\";\n\nexport interface KeyBinding {\n    bindkey: string | object,\n    name: string\n}\n\nexport interface EditorKeyBindings {\n  commands?: KeyBinding[],\n  completer?: KeyBinding[]\n}\n\nexport type EditorProps = {\n    code: string,\n    lang: string,\n    theme: string,\n    shortcuts: string,\n    props: any,\n    editorRef: any,\n    snippetString: string,\n    commands: object,\n    keybindingString: string,\n    onChange: (value: string, event?: any) => void \n  }\n  \nexport const Editor = ({ lang, theme, shortcuts, props, snippetString, commands, keybindingString, editorRef, code, onChange }: EditorProps ) => {\n  \n  useEffect(() => {\n    console.log(\"editor mounted\");\n    return () => {\n      console.log(\"editor unmounted\");\n    }\n  }, []);\n    \n  useEffect(() => {\n    console.log(\"~~~~~ useEffect inside Editor ~~~~~\");\n    //console.log(aceEditor.current?.editor);\n    if(editorRef.current){\n      console.log(editorRef.current.editor.getSession().$modeId);\n      console.log(editorRef.current.editor.commands);\n      \n      ace.require('ace/autocomplete').Autocomplete.for(editorRef.current.editor);\n      const keybindings = JSON.parse(keybindingString) as EditorKeyBindings;\n      console.log(keybindings);\n      if(keybindings.commands && keybindings.commands.length > 0){\n        keybindings.commands.forEach((binding) => {\n            // (editorRef.current.editor as ace.Ace.Editor).commands.bindKey(binding.bindkey, binding.name, undefined);\n            console.log(typeof editorRef.current.editor.commands.bindkey)\n            editorRef.current.editor.commands.bindkey(binding.bindkey, binding.name, undefined);      \n        });\n      }\n      console.log(editorRef.current.editor);\n      if(keybindings.completer && keybindings.completer.length > 0){\n        keybindings.completer.forEach((binding) => {\n            editorRef.current.editor.completer.keyboardBinding.bindkey(binding.bindkey, binding.name);      \n        });\n      }\n      ace.require(\"ace/ext/keybinding_menu\").init(editorRef.current.editor);\n      console.log(editorRef.current.editor);\n      const snippetManager = ace.require('ace/snippets').snippetManager;\n      const snippets = JSON.parse(snippetString) as object;\n      for (const [snippetsLang, snippetsAddRemove] of Object.entries(snippets)){\n        console.log(\"new snippets\")\n        console.log(snippetsLang);\n        console.log(snippetsAddRemove);\n        if(snippetsAddRemove[0]){\n          snippetManager.register(snippetManager.parseSnippetFile(snippetsAddRemove[0], snippetsLang), snippetsLang)\n          console.log(snippetManager);\n        } else {\n          console.log(\"Cannot register snippets: check format of snippets\");\n        }\n        if(snippetsAddRemove[1]){\n          console.log(\"snippets to remove\")\n          console.log(snippetManager.parseSnippetFile(snippetsAddRemove[1], snippetsLang));\n\n          console.log(snippetManager.parseSnippetFile(snippetManager.files['ace/mode/' + snippetsLang].snippetText, snippetsLang));\n          snippetManager.unregister(snippetManager.parseSnippetFile(snippetsAddRemove[1], snippetsLang), snippetsLang)\n          console.log(snippetManager);\n        } else {\n          console.log(\"Cannot unregister snippets: check format of snippets\");\n        }\n      }\n    } else {\n      console.log(\"No editor to register/unregister snippets to\");\n    }\n  }, [snippetString, keybindingString]);\n\n  return (\n          <AceEditor\n          ref={editorRef}\n          name=\"REACT_ACE_EDITOR\"\n          mode={lang}\n          theme={theme}\n          value={code}\n          keyboardHandler={shortcuts}\n          commands={commands}\n          onChange={onChange}\n          {...props} />\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}