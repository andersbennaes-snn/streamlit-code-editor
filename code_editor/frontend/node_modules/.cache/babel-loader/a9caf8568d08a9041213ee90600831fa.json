{"ast":null,"code":"ace.define(\"ace/mode/logiql_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /* THIS FILE WAS AUTOGENERATED FROM tool\\LogicBlox.tmbundle\\Syntaxes\\LogicBlox.tmLanguage (UUID: 59bf5022-e261-453f-b1cb-9f9fa0712413) */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var LogiQLHighlightRules = function LogiQLHighlightRules() {\n    this.$rules = {\n      start: [{\n        token: 'comment.block',\n        regex: '/\\\\*',\n        push: [{\n          token: 'comment.block',\n          regex: '\\\\*/',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.block'\n        }]\n      }, {\n        token: 'comment.single',\n        regex: '//.*'\n      }, {\n        token: 'constant.numeric',\n        regex: '\\\\d+(?:\\\\.\\\\d+)?(?:[eE][+-]?\\\\d+)?[fd]?'\n      }, {\n        token: 'string',\n        regex: '\"',\n        push: [{\n          token: 'string',\n          regex: '\"',\n          next: 'pop'\n        }, {\n          defaultToken: 'string'\n        }]\n      }, {\n        token: 'constant.language',\n        regex: '\\\\b(true|false)\\\\b'\n      }, {\n        token: 'entity.name.type.logicblox',\n        regex: '`[a-zA-Z_:]+(\\\\d|\\\\a)*\\\\b'\n      }, {\n        token: 'keyword.start',\n        regex: '->',\n        comment: 'Constraint'\n      }, {\n        token: 'keyword.start',\n        regex: '-->',\n        comment: 'Level 1 Constraint'\n      }, {\n        token: 'keyword.start',\n        regex: '<-',\n        comment: 'Rule'\n      }, {\n        token: 'keyword.start',\n        regex: '<--',\n        comment: 'Level 1 Rule'\n      }, {\n        token: 'keyword.end',\n        regex: '\\\\.',\n        comment: 'Terminator'\n      }, {\n        token: 'keyword.other',\n        regex: '!',\n        comment: 'Negation'\n      }, {\n        token: 'keyword.other',\n        regex: ',',\n        comment: 'Conjunction'\n      }, {\n        token: 'keyword.other',\n        regex: ';',\n        comment: 'Disjunction'\n      }, {\n        token: 'keyword.operator',\n        regex: '<=|>=|!=|<|>',\n        comment: 'Equality'\n      }, {\n        token: 'keyword.other',\n        regex: '@',\n        comment: 'Equality'\n      }, {\n        token: 'keyword.operator',\n        regex: '\\\\+|-|\\\\*|/',\n        comment: 'Arithmetic operations'\n      }, {\n        token: 'keyword',\n        regex: '::',\n        comment: 'Colon colon'\n      }, {\n        token: 'support.function',\n        regex: '\\\\b(agg\\\\s*<<)',\n        push: [{\n          include: '$self'\n        }, {\n          token: 'support.function',\n          regex: '>>',\n          next: 'pop'\n        }]\n      }, {\n        token: 'storage.modifier',\n        regex: '\\\\b(lang:[\\\\w:]*)'\n      }, {\n        token: ['storage.type', 'text'],\n        regex: '(export|sealed|clauses|block|alias|alias_all)(\\\\s*\\\\()(?=`)'\n      }, {\n        token: 'entity.name',\n        regex: '[a-zA-Z_][a-zA-Z_0-9:]*(@prev|@init|@final)?(?=(\\\\(|\\\\[))'\n      }, {\n        token: 'variable.parameter',\n        regex: '([a-zA-Z][a-zA-Z_0-9]*|_)\\\\s*(?=(,|\\\\.|<-|->|\\\\)|\\\\]|=))'\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(LogiQLHighlightRules, TextHighlightRules);\n  exports.LogiQLHighlightRules = LogiQLHighlightRules;\n});\nace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  var MatchingBraceOutdent = function MatchingBraceOutdent() {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/logiql\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/logiql_highlight_rules\", \"ace/mode/folding/coffee\", \"ace/token_iterator\", \"ace/range\", \"ace/mode/behaviour/cstyle\", \"ace/mode/matching_brace_outdent\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var LogiQLHighlightRules = require(\"./logiql_highlight_rules\").LogiQLHighlightRules;\n  var FoldMode = require(\"./folding/coffee\").FoldMode;\n  var TokenIterator = require(\"../token_iterator\").TokenIterator;\n  var Range = require(\"../range\").Range;\n  var CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var Mode = function Mode() {\n    this.HighlightRules = LogiQLHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      var endState = tokenizedLine.state;\n      if (/comment|string/.test(endState)) return indent;\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment.single\") return indent;\n      var match = line.match();\n      if (/(-->|<--|<-|->|{)\\s*$/.test(line)) indent += tab;\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      if (this.$outdent.checkOutdent(line, input)) return true;\n      if (input !== \"\\n\" && input !== \"\\r\\n\") return false;\n      if (!/^\\s+/.test(line)) return false;\n      return true;\n    };\n    this.autoOutdent = function (state, doc, row) {\n      if (this.$outdent.autoOutdent(doc, row)) return;\n      var prevLine = doc.getLine(row);\n      var match = prevLine.match(/^\\s+/);\n      var column = prevLine.lastIndexOf(\".\") + 1;\n      if (!match || !row || !column) return 0;\n      var line = doc.getLine(row + 1);\n      var startRange = this.getMatching(doc, {\n        row: row,\n        column: column\n      });\n      if (!startRange || startRange.start.row == row) return 0;\n      column = match[0].length;\n      var indent = this.$getIndent(doc.getLine(startRange.start.row));\n      doc.replace(new Range(row + 1, 0, row + 1, column), indent);\n    };\n    this.getMatching = function (session, row, column) {\n      if (row == undefined) row = session.selection.lead;\n      if (typeof row == \"object\") {\n        column = row.column;\n        row = row.row;\n      }\n      var startToken = session.getTokenAt(row, column);\n      var KW_START = \"keyword.start\",\n        KW_END = \"keyword.end\";\n      var tok;\n      if (!startToken) return;\n      if (startToken.type == KW_START) {\n        var it = new TokenIterator(session, row, column);\n        it.step = it.stepForward;\n      } else if (startToken.type == KW_END) {\n        var it = new TokenIterator(session, row, column);\n        it.step = it.stepBackward;\n      } else return;\n      while (tok = it.step()) {\n        if (tok.type == KW_START || tok.type == KW_END) break;\n      }\n      if (!tok || tok.type == startToken.type) return;\n      var col = it.getCurrentTokenColumn();\n      var row = it.getCurrentTokenRow();\n      return new Range(row, col, row, col + tok.value.length);\n    };\n    this.$id = \"ace/mode/logiql\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/logiql\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","LogiQLHighlightRules","$rules","start","token","regex","push","next","defaultToken","comment","include","normalizeRules","inherits","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","prototype","MatchingBraceOutdent","checkOutdent","input","test","autoOutdent","doc","match","column","openBracePos","findMatchingBracket","$getIndent","replace","TextMode","Mode","TokenIterator","CstyleBehaviour","HighlightRules","foldingRules","$outdent","$behaviour","lineCommentStart","blockComment","end","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","prevLine","lastIndexOf","startRange","getMatching","undefined","selection","lead","startToken","getTokenAt","KW_START","KW_END","tok","it","step","stepForward","stepBackward","col","getCurrentTokenColumn","getCurrentTokenRow","value","$id","m"],"sources":["/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-logiql.js"],"sourcesContent":["ace.define(\"ace/mode/logiql_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/* THIS FILE WAS AUTOGENERATED FROM tool\\LogicBlox.tmbundle\\Syntaxes\\LogicBlox.tmLanguage (UUID: 59bf5022-e261-453f-b1cb-9f9fa0712413) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar LogiQLHighlightRules = function () {\n    this.$rules = { start: [{ token: 'comment.block',\n                regex: '/\\\\*',\n                push: [{ token: 'comment.block', regex: '\\\\*/', next: 'pop' },\n                    { defaultToken: 'comment.block' }]\n            },\n            { token: 'comment.single',\n                regex: '//.*'\n            },\n            { token: 'constant.numeric',\n                regex: '\\\\d+(?:\\\\.\\\\d+)?(?:[eE][+-]?\\\\d+)?[fd]?'\n            },\n            { token: 'string',\n                regex: '\"',\n                push: [{ token: 'string', regex: '\"', next: 'pop' },\n                    { defaultToken: 'string' }]\n            },\n            { token: 'constant.language',\n                regex: '\\\\b(true|false)\\\\b'\n            },\n            { token: 'entity.name.type.logicblox',\n                regex: '`[a-zA-Z_:]+(\\\\d|\\\\a)*\\\\b'\n            },\n            { token: 'keyword.start', regex: '->', comment: 'Constraint' },\n            { token: 'keyword.start', regex: '-->', comment: 'Level 1 Constraint' },\n            { token: 'keyword.start', regex: '<-', comment: 'Rule' },\n            { token: 'keyword.start', regex: '<--', comment: 'Level 1 Rule' },\n            { token: 'keyword.end', regex: '\\\\.', comment: 'Terminator' },\n            { token: 'keyword.other', regex: '!', comment: 'Negation' },\n            { token: 'keyword.other', regex: ',', comment: 'Conjunction' },\n            { token: 'keyword.other', regex: ';', comment: 'Disjunction' },\n            { token: 'keyword.operator', regex: '<=|>=|!=|<|>', comment: 'Equality' },\n            { token: 'keyword.other', regex: '@', comment: 'Equality' },\n            { token: 'keyword.operator', regex: '\\\\+|-|\\\\*|/', comment: 'Arithmetic operations' },\n            { token: 'keyword', regex: '::', comment: 'Colon colon' },\n            { token: 'support.function',\n                regex: '\\\\b(agg\\\\s*<<)',\n                push: [{ include: '$self' },\n                    { token: 'support.function',\n                        regex: '>>',\n                        next: 'pop' }]\n            },\n            { token: 'storage.modifier',\n                regex: '\\\\b(lang:[\\\\w:]*)'\n            },\n            { token: ['storage.type', 'text'],\n                regex: '(export|sealed|clauses|block|alias|alias_all)(\\\\s*\\\\()(?=`)'\n            },\n            { token: 'entity.name',\n                regex: '[a-zA-Z_][a-zA-Z_0-9:]*(@prev|@init|@final)?(?=(\\\\(|\\\\[))'\n            },\n            { token: 'variable.parameter',\n                regex: '([a-zA-Z][a-zA-Z_0-9]*|_)\\\\s*(?=(,|\\\\.|<-|->|\\\\)|\\\\]|=))'\n            }] };\n    this.normalizeRules();\n};\noop.inherits(LogiQLHighlightRules, TextHighlightRules);\nexports.LogiQLHighlightRules = LogiQLHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n            if (level == -1)\n                continue;\n            if (line[level] != \"#\")\n                break;\n            endRow = row;\n        }\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        }\n        else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n        if (prevIndent != -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/logiql\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/logiql_highlight_rules\",\"ace/mode/folding/coffee\",\"ace/token_iterator\",\"ace/range\",\"ace/mode/behaviour/cstyle\",\"ace/mode/matching_brace_outdent\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar LogiQLHighlightRules = require(\"./logiql_highlight_rules\").LogiQLHighlightRules;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\nvar TokenIterator = require(\"../token_iterator\").TokenIterator;\nvar Range = require(\"../range\").Range;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Mode = function () {\n    this.HighlightRules = LogiQLHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n        if (/comment|string/.test(endState))\n            return indent;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment.single\")\n            return indent;\n        var match = line.match();\n        if (/(-->|<--|<-|->|{)\\s*$/.test(line))\n            indent += tab;\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        if (this.$outdent.checkOutdent(line, input))\n            return true;\n        if (input !== \"\\n\" && input !== \"\\r\\n\")\n            return false;\n        if (!/^\\s+/.test(line))\n            return false;\n        return true;\n    };\n    this.autoOutdent = function (state, doc, row) {\n        if (this.$outdent.autoOutdent(doc, row))\n            return;\n        var prevLine = doc.getLine(row);\n        var match = prevLine.match(/^\\s+/);\n        var column = prevLine.lastIndexOf(\".\") + 1;\n        if (!match || !row || !column)\n            return 0;\n        var line = doc.getLine(row + 1);\n        var startRange = this.getMatching(doc, { row: row, column: column });\n        if (!startRange || startRange.start.row == row)\n            return 0;\n        column = match[0].length;\n        var indent = this.$getIndent(doc.getLine(startRange.start.row));\n        doc.replace(new Range(row + 1, 0, row + 1, column), indent);\n    };\n    this.getMatching = function (session, row, column) {\n        if (row == undefined)\n            row = session.selection.lead;\n        if (typeof row == \"object\") {\n            column = row.column;\n            row = row.row;\n        }\n        var startToken = session.getTokenAt(row, column);\n        var KW_START = \"keyword.start\", KW_END = \"keyword.end\";\n        var tok;\n        if (!startToken)\n            return;\n        if (startToken.type == KW_START) {\n            var it = new TokenIterator(session, row, column);\n            it.step = it.stepForward;\n        }\n        else if (startToken.type == KW_END) {\n            var it = new TokenIterator(session, row, column);\n            it.step = it.stepBackward;\n        }\n        else\n            return;\n        while (tok = it.step()) {\n            if (tok.type == KW_START || tok.type == KW_END)\n                break;\n        }\n        if (!tok || tok.type == startToken.type)\n            return;\n        var col = it.getCurrentTokenColumn();\n        var row = it.getCurrentTokenRow();\n        return new Range(row, col, row, col + tok.value.length);\n    };\n    this.$id = \"ace/mode/logiql\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/logiql\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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"},"metadata":{},"sourceType":"script"}