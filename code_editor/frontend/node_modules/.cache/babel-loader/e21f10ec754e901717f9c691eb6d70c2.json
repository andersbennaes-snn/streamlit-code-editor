{"ast":null,"code":"import _regeneratorRuntime from \"/home/anasbouzid/code-projects/streamlit/custom-components/CodeEditor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/anasbouzid/code-projects/streamlit/custom-components/CodeEditor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/anasbouzid/code-projects/streamlit/custom-components/CodeEditor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from '../../util/buffer';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n/** @ignore */\nexport function toDOMStream(source, options) {\n  if (isAsyncIterable(source)) {\n    return asyncIterableAsReadableDOMStream(source, options);\n  }\n  if (isIterable(source)) {\n    return iterableAsReadableDOMStream(source, options);\n  }\n  /* istanbul ignore next */\n  throw new Error(\"toDOMStream() must be called with an Iterable or AsyncIterable\");\n}\n/** @ignore */\nfunction iterableAsReadableDOMStream(source, options) {\n  var it = null;\n  var bm = options && options.type === 'bytes' || false;\n  var hwm = options && options.highWaterMark || Math.pow(2, 24);\n  return new ReadableStream(_objectSpread(_objectSpread({}, options), {}, {\n    start: function start(controller) {\n      next(controller, it || (it = source[Symbol.iterator]()));\n    },\n    pull: function pull(controller) {\n      it ? next(controller, it) : controller.close();\n    },\n    cancel: function cancel() {\n      (it && it.return && it.return() || true) && (it = null);\n    }\n  }), _objectSpread({\n    highWaterMark: bm ? hwm : undefined\n  }, options));\n  function next(controller, it) {\n    var buf;\n    var r = null;\n    var size = controller.desiredSize || null;\n    while (!(r = it.next(bm ? size : null)).done) {\n      if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n        size != null && bm && (size = size - buf.byteLength + 1);\n        r.value = buf;\n      }\n      controller.enqueue(r.value);\n      if (size != null && --size <= 0) {\n        return;\n      }\n    }\n    controller.close();\n  }\n}\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream(source, options) {\n  var it = null;\n  var bm = options && options.type === 'bytes' || false;\n  var hwm = options && options.highWaterMark || Math.pow(2, 24);\n  return new ReadableStream(_objectSpread(_objectSpread({}, options), {}, {\n    start: function start(controller) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return next(controller, it || (it = source[Symbol.asyncIterator]()));\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    pull: function pull(controller) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!it) {\n                _context2.next = 5;\n                break;\n              }\n              _context2.next = 3;\n              return next(controller, it);\n            case 3:\n              _context2.next = 6;\n              break;\n            case 5:\n              controller.close();\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    cancel: function cancel() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.t1 = it;\n              if (!_context3.t1) {\n                _context3.next = 8;\n                break;\n              }\n              _context3.t2 = it.return;\n              if (!_context3.t2) {\n                _context3.next = 7;\n                break;\n              }\n              _context3.next = 6;\n              return it.return();\n            case 6:\n              _context3.t2 = _context3.sent;\n            case 7:\n              _context3.t1 = _context3.t2;\n            case 8:\n              _context3.t0 = _context3.t1;\n              if (_context3.t0) {\n                _context3.next = 11;\n                break;\n              }\n              _context3.t0 = true;\n            case 11:\n              _context3.t3 = _context3.t0;\n              if (!_context3.t3) {\n                _context3.next = 14;\n                break;\n              }\n              it = null;\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n  }), _objectSpread({\n    highWaterMark: bm ? hwm : undefined\n  }, options));\n  function next(_x, _x2) {\n    return _next.apply(this, arguments);\n  }\n  function _next() {\n    _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(controller, it) {\n      var buf, r, size;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            r = null;\n            size = controller.desiredSize || null;\n          case 2:\n            _context4.next = 4;\n            return it.next(bm ? size : null);\n          case 4:\n            if ((r = _context4.sent).done) {\n              _context4.next = 11;\n              break;\n            }\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n              size != null && bm && (size = size - buf.byteLength + 1);\n              r.value = buf;\n            }\n            controller.enqueue(r.value);\n            if (!(size != null && --size <= 0)) {\n              _context4.next = 9;\n              break;\n            }\n            return _context4.abrupt(\"return\");\n          case 9:\n            _context4.next = 2;\n            break;\n          case 11:\n            controller.close();\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return _next.apply(this, arguments);\n  }\n}","map":{"version":3,"mappings":"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","names":["toUint8Array","isIterable","isAsyncIterable","toDOMStream","source","options","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","Error","it","bm","type","hwm","highWaterMark","ReadableStream","start","controller","next","Symbol","iterator","pull","close","cancel","return","undefined","buf","r","size","desiredSize","done","ArrayBuffer","isView","value","byteLength","enqueue","asyncIterator"],"sources":["io/whatwg/iterable.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}