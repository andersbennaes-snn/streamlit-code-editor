{"ast":null,"code":"import _slicedToArray from\"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useEffect}from\"react\";import AceEditor from\"react-ace\";import ace from\"ace-builds\";import\"ace-builds/webpack-resolver\";import\"ace-builds/src-noconflict/mode-python\";import\"ace-builds/src-noconflict/mode-javascript\";import\"ace-builds/src-noconflict/ext-language_tools\";import\"ace-builds/src-noconflict/ext-searchbox\";import\"ace-builds/src-noconflict/ext-prompt\";import\"ace-builds/src-noconflict/ext-modelist\";import\"ace-builds/src-noconflict/ext-keybinding_menu\";import{jsx as _jsx}from\"react/jsx-runtime\";export var Editor=function Editor(_ref){var lang=_ref.lang,theme=_ref.theme,shortcuts=_ref.shortcuts,props=_ref.props,snippetString=_ref.snippetString,commands=_ref.commands,keybindingString=_ref.keybindingString,editorRef=_ref.editorRef,code=_ref.code,onChange=_ref.onChange;useEffect(function(){if(editorRef.current){// Add/remove keybindings\nace.require('ace/autocomplete').Autocomplete.for(editorRef.current.editor);var keybindings=JSON.parse(keybindingString);if(keybindings.commands&&keybindings.commands.length>0){// const bindkeySelector = editorRef.current.editor.commands.platform as string;\nkeybindings.commands.forEach(function(binding){if(binding.name&&typeof binding.name===\"string\"){var _editorRef$current$ed;if(JSON.stringify((_editorRef$current$ed=editorRef.current.editor.commands.commands[binding.name].bindKey)!==null&&_editorRef$current$ed!==void 0?_editorRef$current$ed:\"\")!==JSON.stringify(binding.bindkey)){var newCommand=_objectSpread({},editorRef.current.editor.commands.commands[binding.name]);newCommand.bindKey=binding.bindkey;editorRef.current.editor.commands.addCommand(newCommand);commands=[].concat(_toConsumableArray(commands),[newCommand]);}}});}if(keybindings.completer&&keybindings.completer.length>0){// const bindkeySelector = editorRef.current.editor.completer.keyboardHandler.platform as string;\nkeybindings.completer.forEach(function(binding){if(binding.name&&typeof binding.name===\"string\"){var _editorRef$current$ed2;if(JSON.stringify((_editorRef$current$ed2=editorRef.current.editor.completer.keyboardHandler.commands[binding.name].bindKey)!==null&&_editorRef$current$ed2!==void 0?_editorRef$current$ed2:\"\")!==JSON.stringify(binding.bindkey)){var newCommand=_objectSpread({},editorRef.current.editor.completer.keyboardHandler.commands[binding.name]);newCommand.bindKey=binding.bindkey;editorRef.current.editor.completer.keyboardHandler.addCommand(newCommand);}}});}// Add/remove snippets\nace.require(\"ace/ext/keybinding_menu\").init(editorRef.current.editor);var snippetManager=ace.require('ace/snippets').snippetManager;var snippets=JSON.parse(snippetString);for(var _i=0,_Object$entries=Object.entries(snippets);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),snippetsLang=_Object$entries$_i[0],snippetsAddRemove=_Object$entries$_i[1];if(snippetsAddRemove[0])snippetManager.register(snippetManager.parseSnippetFile(snippetsAddRemove[0],snippetsLang),snippetsLang);if(snippetsAddRemove[1])snippetManager.unregister(snippetManager.parseSnippetFile(snippetsAddRemove[1],snippetsLang),snippetsLang);}}},[snippetString,keybindingString]);return/*#__PURE__*/_jsx(AceEditor,_objectSpread({ref:editorRef,name:\"REACT_ACE_EDITOR\",mode:lang,theme:theme,value:code,keyboardHandler:shortcuts,commands:commands,onChange:onChange},props));};","map":{"version":3,"names":["useEffect","AceEditor","ace","Editor","lang","theme","shortcuts","props","snippetString","commands","keybindingString","editorRef","code","onChange","current","require","Autocomplete","for","editor","keybindings","JSON","parse","length","forEach","binding","name","stringify","bindKey","bindkey","newCommand","addCommand","completer","keyboardHandler","init","snippetManager","snippets","Object","entries","snippetsLang","snippetsAddRemove","register","parseSnippetFile","unregister"],"sources":["/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/src/editor.tsx"],"sourcesContent":["import { useEffect} from \"react\"\nimport AceEditor from \"react-ace\";\nimport ace from \"ace-builds\";\n\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/ext-prompt\";\nimport \"ace-builds/src-noconflict/ext-modelist\";\nimport \"ace-builds/src-noconflict/ext-keybinding_menu\";\n\nexport interface KeyBinding {\n    bindkey: string | object,\n    name: string\n}\n\nexport interface EditorKeyBindings {\n  commands?: KeyBinding[],\n  completer?: KeyBinding[]\n}\n\nexport type EditorProps = {\n    code: string,\n    lang: string,\n    theme: string,\n    shortcuts: string,\n    props: any,\n    editorRef: any,\n    snippetString: string,\n    commands: object[],\n    keybindingString: string,\n    onChange: (value: string, event?: any) => void \n  }\n  \nexport const Editor = ({ lang, theme, shortcuts, props, snippetString, commands, keybindingString, editorRef, code, onChange }: EditorProps ) => {\n    \n  useEffect(() => {\n    if(editorRef.current){\n\n      // Add/remove keybindings\n      ace.require('ace/autocomplete').Autocomplete.for(editorRef.current.editor);\n      const keybindings = JSON.parse(keybindingString) as EditorKeyBindings;\n      if(keybindings.commands && keybindings.commands.length > 0){\n        // const bindkeySelector = editorRef.current.editor.commands.platform as string;\n        keybindings.commands.forEach((binding) => {\n            if(binding.name && typeof binding.name === \"string\"){\n              if (JSON.stringify(editorRef.current.editor.commands.commands[binding.name].bindKey ?? \"\") !== JSON.stringify(binding.bindkey)) {\n                const newCommand = {...editorRef.current.editor.commands.commands[binding.name]};\n                newCommand.bindKey = binding.bindkey;\n                editorRef.current.editor.commands.addCommand(newCommand);\n                commands= [...commands, newCommand];\n              }\n            }\n   \n        });\n      }\n      if(keybindings.completer && keybindings.completer.length > 0){\n        // const bindkeySelector = editorRef.current.editor.completer.keyboardHandler.platform as string;\n        keybindings.completer.forEach((binding) => {\n            if(binding.name && typeof binding.name === \"string\"){\n              if (JSON.stringify(editorRef.current.editor.completer.keyboardHandler.commands[binding.name].bindKey ?? \"\") !== JSON.stringify(binding.bindkey)) {\n                const newCommand = {...editorRef.current.editor.completer.keyboardHandler.commands[binding.name]};\n                newCommand.bindKey = binding.bindkey;\n                editorRef.current.editor.completer.keyboardHandler.addCommand(newCommand);\n              }\n            }\n        });\n      }\n\n      // Add/remove snippets\n      ace.require(\"ace/ext/keybinding_menu\").init(editorRef.current.editor);\n      const snippetManager = ace.require('ace/snippets').snippetManager;\n      const snippets = JSON.parse(snippetString) as object;\n      for (const [snippetsLang, snippetsAddRemove] of Object.entries(snippets)){\n        if(snippetsAddRemove[0])\n          snippetManager.register(snippetManager.parseSnippetFile(snippetsAddRemove[0], snippetsLang), snippetsLang)\n        \n        if(snippetsAddRemove[1])\n          snippetManager.unregister(snippetManager.parseSnippetFile(snippetsAddRemove[1], snippetsLang), snippetsLang)\n      }\n    }\n  }, [snippetString, keybindingString]);\n\n  return (\n          <AceEditor\n           ref={editorRef}\n           name=\"REACT_ACE_EDITOR\"\n           mode={lang}\n           theme={theme}\n           value={code}\n           keyboardHandler={shortcuts}\n           commands={commands}\n           onChange={onChange}\n           {...props}/>\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}