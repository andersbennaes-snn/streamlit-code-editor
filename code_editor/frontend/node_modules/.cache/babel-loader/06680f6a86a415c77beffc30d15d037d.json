{"ast":null,"code":"import _objectSpread from\"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectWithoutProperties from\"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _defineProperty from\"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import{createGlobalStyle as _createGlobalStyle}from\"styled-components\";import _styled from\"styled-components\";var _excluded=[\"info\",\"menu\",\"focus\"];var _templateObject;import{Streamlit,withStreamlitConnection}from\"streamlit-component-lib\";import{useState,useRef,useEffect,useMemo}from\"react\";import ace from\"ace-builds\";import{Editor}from'./editor';import{Menu as ButtonMenu,Set as ButtonSet,Info as InfoBar}from\"./button-menu\";import\"ace-builds/webpack-resolver\";import\"ace-builds/src-noconflict/mode-python\";import\"ace-builds/src-noconflict/mode-javascript\";import\"ace-builds/src-noconflict/ext-language_tools\";import\"ace-builds/src-noconflict/ext-searchbox\";import\"ace-builds/src-noconflict/ext-prompt\";import\"ace-builds/src-noconflict/ext-modelist\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var defaultOptions={fontFamily:'\"Source Code Pro\", monospace',cursorStyle:\"smooth\",displayIndentGuides:false,wrap:true,highlightActiveLine:true,showPrintMargin:false,showLineNumbers:false,foldStyle:\"markbegin\",autoScrollEditorIntoView:false,animatedScroll:true,fadeFoldWidgets:true};var defaultEditorProps={editorProps:{$blockScrolling:true}};var defaultProps={cursorStart:1,enableBasicAutocompletion:false,enableLiveAutocompletion:true,enableSnippets:true,focus:false,fontSize:14,highlightActiveLine:true,navigateToFileEnd:true,placeholder:null,readOnly:false,scrollMargin:[15,15,0,0],setOptions:defaultOptions,showGutter:true,showPrintMargin:false,style:{},tabSize:4,width:\"auto\",debounceChangePeriod:250};var GlobalCSS=_createGlobalStyle(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  html {\\n    opacity: \",\";\\n    cursor: \",\";\\n    pointer-events: \",\";\\n  }\\n  body {\\n    margin: 0;\\n    padding: 0;\\n  }\\n  \",\"\\n\"])),function(props){return props.isDisabled?\"0.5\":\"1\";},function(props){return props.isDisabled?\"not-allowed\":\"auto\";},function(props){return props.isDisabled?\"none\":\"auto\";},function(props){return props.inject;});var StyledCodeEditor=_styled.div.withConfig({displayName:\"CodeEditor__StyledCodeEditor\",componentId:\"sc-wmif04-0\"})([\"width:100%;border-radius:8px;overflow:hidden;display:flex;flex-direction:column;:hover button{opacity:1;transform:scale(1);}button.always-on{opacity:1;transform:scale(1);transition:none;}:hover button svg{opacity:1;transform:scale(1);}:hover button.with-icon span{opacity:1;transform:scale(1);}button.always-on > span{opacity:1;transform:scale(1);transition:none;}button.always-on > svg{opacity:1;transform:scale(1);transition:none;}\"]);var _StyledStyledCodeEditor=_styled(StyledCodeEditor).withConfig({displayName:\"CodeEditor___StyledStyledCodeEditor\",componentId:\"sc-wmif04-1\"})([\"\",\"\"],function(p){return p.$_css;});var CodeEditor=function CodeEditor(_ref){var _ref3;var args=_ref.args,width=_ref.width,disabled=_ref.disabled,theme=_ref.theme;//sets code to the initial value every time the component is rendered\n//to set the initial value once, use a function instead of a value.\nvar _useState=useState(args['code']),_useState2=_slicedToArray(_useState,2),code=_useState2[0],setCode=_useState2[1];// const [keybindingAddRemove, setKeybindingAddRemove] = useState([\"\",\"\"]);\nvar aceEditor=useRef(null);var infoTextRef=useRef(null);var baseSession=useRef(null);var keepFocus=useRef(false);var timeoutId;/**\n    * This function takes as input either a snippetText string that is expected\n    * to be already formatted like the text in a SnippetFile or a dictionary or \n    * and array of dictionaries. For the first case, it just returns the input.\n    * For the second and third case, a (SnippetFile format) string is constructed\n    * from the dict(s) and returned. Learn more about snippets {@link  here}\n    * @param snippetRaw snippets to be converted to a single snippetText string\n    * @returns {string} snippetText\n    */var createSnippets=function createSnippets(snippetRaw){return typeof snippetRaw===\"string\"?snippetRaw:(Array.isArray(snippetRaw)?snippetRaw:[snippetRaw]).map(function(_ref2){var name=_ref2.name,code=_ref2.code;return['snippet '+name,code.split('\\n').map(function(c){return'\\t'+c;}).join('\\n')].join('\\n');}).join('\\n');};var _useState3=useState(_defineProperty({},args['lang'],[createSnippets(args[\"snippets\"][0]),createSnippets(args[\"snippets\"][1])])),_useState4=_slicedToArray(_useState3,2),snippetAddRemove=_useState4[0],setSnippetAddRemove=_useState4[1];var _useState6=useState(args['keybindings']),_useState7=_slicedToArray(_useState6,2),keybindingAddRemove=_useState7[0],setKeybindingAddRemove=_useState7[1];useEffect(function(){return function(){if(timeoutId){clearTimeout(timeoutId);}};},[]);useEffect(function(){if(aceEditor.current&&keepFocus.current){aceEditor.current.editor.focus();keepFocus.current=false;}},[keepFocus.current]);// To reasons for the useEffect here: \n//   1. to set the focus on the editor only when the focus argument has changed to true.\n//   2. to set the focus on the editor after rendering the component at which point, the \n//      editor should be ready.\nuseEffect(function(){if(aceEditor.current&&args['focus']){aceEditor.current.editor.focus();}},[args.focus]);var onChangeHandler=function onChangeHandler(newCode){setCode(newCode);};// commands is an array of objects containing functions\n// that the editor can be triggered to call.\nvar commands={commands:[{name:'submit',//name for the key binding.\ndescription:\"Send 'submit' response\",//description of the command\nbindKey:{win:'Ctrl-Enter',mac:'Command-Enter'},//key combination used for the command.\nexec:function exec(editor){var outgoingMode=editor.getSession().$modeId.split(\"/\").pop();Streamlit.setComponentValue({text:editor.getValue(),type:\"submit\",lang:outgoingMode});}},{name:'saveState',description:\"Save state\",bindKey:{win:'Ctrl-Alt-S',mac:'Command-Alt-S'},exec:function exec(editor){setCode(editor.getValue());}},{name:'copyAll',description:\"Copy all text to clipboard\",exec:function exec(editor){unsecureCopyTextToClipboard(editor.getValue());}},{name:'reset',exec:function exec(){resetEditor();}},{name:'keepFocus',description:\"Return cursor to editor\",exec:function exec(){keepFocus.current=true;}},{name:\"setMode\",description:\"Set language mode\",exec:function exec(editor,lang){if(lang&&typeof lang===\"string\")editor.getSession().setMode(\"ace/mode/\"+lang);},readOnly:true},{name:\"changeShortcuts\",description:\"Switch shortcuts\",exec:function exec(editor,shortcuts){if(shortcuts&&typeof shortcuts===\"string\")editor.setKeyboardHandler(\"ace/keyboard/\"+shortcuts);else{//rotate through the available keyboard handlers\nvar handlers=[\"ace/keyboard/vim\",\"ace/keyboard/emacs\",\"ace/keyboard/sublime\",\"ace/keyboard/vscode\"];var currentHandler=handlers[(handlers.indexOf(editor.$keybindingId)+1)%4];editor.setKeyboardHandler(currentHandler);}},readOnly:true},{name:'toggleKeyboardShortcuts',exec:function exec(editor){if(!document.getElementById('kbshortcutmenu'))editor.execCommand('showKeyboardShortcuts');else editor.execCommand('simulateKeyPress',{type:\"keydown\",keyCode:27});}},{name:'simulateKeyPress',exec:function exec(editor,args){if(args.key)document.dispatchEvent(new KeyboardEvent(args.type,{'key':args.key}));else if(args.keyCode)document.dispatchEvent(new KeyboardEvent(args.type,{'keyCode':args.keyCode}));}},{name:'infoMessage',description:\"Display message in info bar\",exec:function exec(editor,args){if(args.targetQueryString){var target=document.querySelector(args.targetQueryString);if(target){target.innerText=args.text;target.classList.add(args.classToggle||\"\");if(args.timeout){timeoutId=setTimeout(function(){target.classList.remove(args.classToggle||\"\");},args.timeout);}}}else if(infoTextRef.current){infoTextRef.current.innerText=args.text;infoTextRef.current.classList.add(args.classToggle||\"\");if(args.timeout){timeoutId=setTimeout(function(){var _infoTextRef$current;(_infoTextRef$current=infoTextRef.current)===null||_infoTextRef$current===void 0?void 0:_infoTextRef$current.classList.remove(args.classToggle||\"\");},args.timeout);}}}},{name:'response',//name for the key binding.\ndescription:\"Send custom response\",//description of the command\nexec:function exec(editor){var responseType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";var outgoingMode=editor.getSession().$modeId.split(\"/\").pop();Streamlit.setComponentValue({text:code,type:responseType,lang:outgoingMode});}},{name:'editSnippets',description:\"Edit snippets\",bindKey:{win:'Ctrl-Alt-M',mac:'Command-Alt-M'},exec:function exec(editor){var snippetManager=ace.require('ace/snippets').snippetManager;if(baseSession.current){var outgoingMode=editor.getSession().$modeId.split(\"/\").pop();if(outgoingMode===\"snippets\"){var snippetText=editor.getSession().getValue();editor.setSession(baseSession.current);baseSession.current=null;setCode(editor.getSession().getValue());if(outgoingMode===\"snippets\"){}try{var snippetsPlusMinus=snippetText.split(\"###~~~\")[1];var _snippetsPlusMinus$sp=snippetsPlusMinus.split(\"###---\"),_snippetsPlusMinus$sp2=_slicedToArray(_snippetsPlusMinus$sp,2),snippetsPlus=_snippetsPlusMinus$sp2[0],snippetsMinus=_snippetsPlusMinus$sp2[1];var snippetsToAdd=snippetsPlus.split(\"###+++\")[1];var snippetsToRemove=snippetsMinus;var langMode=editor.getSession().$modeId.split(\"/\").pop();setSnippetAddRemove(_defineProperty({},langMode,[snippetAddRemove[langMode][0]+snippetsToAdd,snippetAddRemove[langMode][1]+snippetsToRemove]));}catch(error){editor.execCommand(\"infoMessage\",{text:\"error parsing file, restoring original file\",timeout:2000,classToggle:\"show\"});}}}else{var _langMode=editor.getSession().$modeId.split(\"/\").pop();var snippetConcatText=\"\\n###~~~#(DO NOT EDIT THIS LINE)\\n# Commented out above are all the snippets that are currently\\n# registered for \".concat(args['lang'],\" mode.\\n\\n\\n###+++#(DO NOT EDIT THIS LINE) \\n# Put the snippets you want to add below this line.\\n\\n\\n\\n\\n\\n\\n\\n###---#(DO NOT EDIT THIS LINE) \\n# Put the snippets you want to remove below this line.\\n\\n\\n\\n\\n\\n\\n\");var _snippetText=\"#\"+createSnippets(snippetManager.snippetMap[_langMode].map(function(snip){return{name:snip.name,code:snip.content};})).replace(/\\n/g,\"\\n#\")+snippetConcatText;// snippetManager.files[editor.getSession().$modeId].snippetText\nvar lineCount=(_snippetText.match(/\\n/g)||[]).length;baseSession.current=editor.getSession();var snippetsSession=ace.createEditSession(_snippetText,\"ace/mode/snippets\");editor.setSession(snippetsSession);var cursorPos={row:lineCount-15>0?lineCount-15:0,column:0};editor.moveCursorTo(cursorPos.row,cursorPos.column);editor.renderer.scrollCursorIntoView(cursorPos,0.5);}}},{name:'editKeyBindings',description:\"Edit keybindings\",bindKey:{win:'Ctrl-Alt-B',mac:'Command-Alt-B'},exec:function exec(editor){ace.require('ace/autocomplete').Autocomplete.for(editor);if(baseSession.current){var outgoingMode=editor.getSession().$modeId.split(\"/\").pop();if(outgoingMode===\"json\"){var keybindingsJSON=editor.getSession().getValue();editor.setSession(baseSession.current);baseSession.current=null;setCode(editor.getSession().getValue());try{setKeybindingAddRemove(JSON.parse(keybindingsJSON));}catch(error){editor.execCommand(\"infoMessage\",{text:\"error parsing file, restoring original file\",timeout:2000,classToggle:\"show\"});}}}else{var keybindings={commands:{},completer:{}};if(editor.completer&&editor.completer.keyboardHandler.commands){keybindings.completer=Object.keys(editor.completer.keyboardHandler.commands).map(function(key){var _editor$completer$key;return{bindkey:(_editor$completer$key=editor.completer.keyboardHandler.commands[key].bindKey)!==null&&_editor$completer$key!==void 0?_editor$completer$key:\"\",name:editor.completer.keyboardHandler.commands[key].name};});}if(editor.commands.commands){keybindings.commands=Object.keys(editor.commands.commands).map(function(key){var _editor$commands$comm;return{bindkey:(_editor$commands$comm=editor.commands.commands[key].bindKey)!==null&&_editor$commands$comm!==void 0?_editor$commands$comm:\"\",name:editor.commands.commands[key].name};});}var _keybindingsJSON=JSON.stringify(keybindings,undefined,2);baseSession.current=editor.getSession();var keybindingsSession=ace.createEditSession(_keybindingsJSON,\"ace/mode/json\");editor.setSession(keybindingsSession);}}},{name:'exitSession',//name for the key binding.\nbindKey:{win:'Esc',mac:'Esc'},description:\"Return to main session (keep changes)\",//description of the command\nexec:function exec(editor){if(baseSession.current){var mode=editor.getSession().$modeId.split(\"/\").pop();if(mode===\"snippets\")editor.execCommand(\"editSnippets\");else if(mode===\"json\")editor.execCommand(\"editKeyBindings\");}}},{name:'abandonSession',//name for the key binding.\nbindKey:{win:'Ctrl-Alt-Esc',mac:'Command-Alt-Esc'},description:\"Return to main session (discard changes)\",//description of the command\nexec:function exec(editor){if(baseSession.current){editor.setSession(baseSession.current);baseSession.current=null;setCode(editor.getSession().getValue());}}},{name:'classART',//name for the key binding.\ndescription:\"Add/Remove/Toggle class for element\",//description of the command\nexec:function exec(editor,args){var _document$querySelect,_document$querySelect2,_document$querySelect3;if(args.targetQueryString&&args.type&&args.class){switch(args.type){case\"add\":(_document$querySelect=document.querySelectorAll(args.targetQueryString))===null||_document$querySelect===void 0?void 0:_document$querySelect.forEach(function(el){return el.classList.add(args.class);});break;case\"remove\":(_document$querySelect2=document.querySelectorAll(args.targetQueryString))===null||_document$querySelect2===void 0?void 0:_document$querySelect2.forEach(function(el){return el.classList.remove(args.class);});break;case\"toggle\":(_document$querySelect3=document.querySelectorAll(args.targetQueryString))===null||_document$querySelect3===void 0?void 0:_document$querySelect3.forEach(function(el){return el.classList.toggle(args.class);});break;default:break;}}}},{name:'conditionalExecute',//name for the key binding.\ndescription:\"Execute command if element exists\",//description of the command\nexec:function exec(editor,args){if(args.targetQueryString&&args.command&&Array.isArray(args.command)){var _args$condition;if(!((_args$condition=args.condition)!==null&&_args$condition!==void 0?_args$condition:true)===!document.querySelector(args.targetQueryString)){typeof args.command[0]===\"string\"?execute(args.command[0],args.command[1]):console.warn(\"Editor command - conditionalExecute: improper command format! Command array must contain name of command as first element and arguments as second element.\");}}}}]};var execute=function execute(command){var _aceEditor$current;var args=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";var editor=(_aceEditor$current=aceEditor.current)===null||_aceEditor$current===void 0?void 0:_aceEditor$current.editor;if(editor){if(!args){editor.execCommand(command);}else if(typeof args===\"number\"||typeof args===\"string\"){editor.execCommand(command,args);}else if(typeof args===\"object\"&&!Array.isArray(args)){var containsNumsStr=true;Object.keys(args).forEach(function(key){containsNumsStr=typeof args[key]===\"string\"||typeof args[key]===\"number\"||Array.isArray(args[key]);});if(Object.keys(args).length<4&&containsNumsStr){editor.execCommand(command,args);}}else{console.warn(\"Function - execute: failed to parse/execute \\\"\".concat(command,\"\\\" command!\"));}}};var _executeAll=function executeAll(commands){commands.forEach(function(singleCommand){if(Array.isArray(singleCommand)){typeof singleCommand[0]===\"string\"?execute(singleCommand[0],singleCommand[1]):console.warn(\"Function - executeAll: improper command format! Singular commands must contain name of command as first element and arguments as second element.\");}else if(typeof singleCommand===\"string\"){execute(singleCommand);}else{console.warn(\"Function - executeAll: failed to parse/execute command(s)!\");}});};var resetEditor=function resetEditor(){setCode(args['code']);};var unsecureCopyTextToClipboard=function unsecureCopyTextToClipboard(text){var textField=document.createElement('textarea');textField.value=text;document.body.appendChild(textField);textField.select();document.execCommand('copy');textField.remove();};/**\n   * resizeObserver observes changes in elements its given to observe and is used here\n   * to communicate to streamlit the height of the component that has changed\n   * so that streamlit can adjust the iframe containing the component accordingly.\n   */var resizeObserver=new ResizeObserver(function(entries){var _entries$0$contentBox;// If we know that the body will always fully contain our component (without cutting it off)\n// then we can use docuemnt.body height instead\nStreamlit.setFrameHeight((_entries$0$contentBox=entries[0].contentBoxSize.blockSize)!==null&&_entries$0$contentBox!==void 0?_entries$0$contentBox:entries[0].contentRect.height);});var observe=function observe(divElem){divElem?resizeObserver.observe(divElem):resizeObserver.disconnect();};/**\n   * This could also be memoized but I don't think it would be necessary because its not expensive.\n   */var themeChoice=function themeChoice(){var isDarkTheme=theme?theme.base===\"dark\":true;switch(args['theme']){case\"contrast\":return isDarkTheme?\"streamlit_light\":\"streamlit_dark\";case\"light\":return\"streamlit_light\";case\"dark\":return\"streamlit_dark\";case\"default\":return isDarkTheme?\"streamlit_dark\":\"streamlit_light\";default:return isDarkTheme?\"streamlit_dark\":\"streamlit_light\";}};var themeProp=themeChoice();var componentContainerProps=args[\"component_props\"];var infoArg=args.info,menuArg=args.menu,focusArg=args.focus,rest=_objectWithoutProperties(args,_excluded);var editorArgsString=JSON.stringify(rest);var menuArgsString=JSON.stringify(menuArg);var infoArgsString=JSON.stringify(infoArg);var buttonArgsString=JSON.stringify(args['buttons']);var themeString=JSON.stringify(theme);var snippets=JSON.stringify(snippetAddRemove);/**\n   * This section contains the main sub-components (child components). These components are wrapped in useMemos\n   * in order to prevent unnecessary re-rendering of the components. This is listed as one of its use cases in the\n   * React docs ({@link https://beta.reactjs.org/reference/react/useMemo#skipping-re-rendering-of-components Skipping re-rendering of components})\n   *\n   * This component is the editor component that is rendered. It is only re-rendered when\n   * certain properties change. This is important because we should account for the possibility that the editor \n   * is being used at any given moment. Unnecessary and frequent re-rendering of the editor (for outside reasons\n   * especially) can impact user experience and responsiveness.\n   */var editor=useMemo(function(){var keybindings=JSON.stringify(keybindingAddRemove);var revertedArgs=JSON.parse(editorArgsString);// Create commands for each button\nif(revertedArgs['buttons'].length>0){revertedArgs['buttons'].forEach(function(button){commands.commands=[].concat(_toConsumableArray(commands.commands),[{name:button.name.trim().replace(/\\s+/g,'_')+'_button',description:\"Execute '\"+button.name+\"' button command(s)\",exec:function exec(){_executeAll(button.commands);}}]);});}var heightProps={};if(typeof revertedArgs['height']===\"number\")heightProps={minLines:1,maxLines:revertedArgs['height']};else if(typeof revertedArgs['height']===\"string\")heightProps={height:revertedArgs['height']};else if(Array.isArray(revertedArgs['height'])&&revertedArgs['height'].length===2)heightProps={minLines:revertedArgs['height'][0],maxLines:revertedArgs['height'][1]};var aceEditorProps=_objectSpread(_objectSpread({},defaultEditorProps),revertedArgs['editorProps']);var aceOptions=_objectSpread(_objectSpread({},defaultOptions),revertedArgs['options']);var partProps={setOptions:aceOptions,editorProps:aceEditorProps};var aceProps=_objectSpread(_objectSpread(_objectSpread(_objectSpread({},defaultProps),partProps),heightProps),revertedArgs['props']);/**\n     * TODO: Remove props from aceProps that we don't want to allow user access to.\n     */return/*#__PURE__*/_jsx(Editor,{editorRef:aceEditor,code:code,lang:revertedArgs['lang'],theme:themeProp,shortcuts:revertedArgs['shortcuts'],snippetString:snippets,commands:commands.commands,keybindingString:keybindings,props:aceProps,onChange:function onChange(value){return onChangeHandler(value);}});},[editorArgsString,themeProp,snippets,keybindingAddRemove]);var buttons=useMemo(function(){var revertedButtons=JSON.parse(buttonArgsString);var revertedTheme=JSON.parse(themeString);var customButtonTheme=revertedTheme!==null&&revertedTheme!==void 0?revertedTheme:{};var customButtons={buttons:revertedButtons!==null&&revertedButtons!==void 0?revertedButtons:[],name:\"customButtons\"};return/*#__PURE__*/_jsx(ButtonSet,{buttonGroup:customButtons,theme:customButtonTheme,themeProp:themeProp,executeAll:function executeAll(commands){return _executeAll(commands);}});},[buttonArgsString,themeString,themeProp]);var menu=useMemo(function(){var revertedMenu=JSON.parse(menuArgsString);var revertedTheme=JSON.parse(themeString);var menuTheme=revertedTheme!==null&&revertedTheme!==void 0?revertedTheme:{};return/*#__PURE__*/_jsx(ButtonMenu,{menu:revertedMenu,theme:menuTheme,themeProp:themeProp,executeAll:function executeAll(commands){return _executeAll(commands);}});},[menuArgsString,themeString,themeProp]);var info=useMemo(function(){var revertedInfo=JSON.parse(infoArgsString);var revertedTheme=JSON.parse(themeString);var infoTheme=revertedTheme!==null&&revertedTheme!==void 0?revertedTheme:{};return/*#__PURE__*/_jsx(InfoBar,{infoRef:infoTextRef,info:revertedInfo,theme:infoTheme});},[infoArgsString,themeString]);var globalCSS=useMemo(function(){return/*#__PURE__*/_jsx(GlobalCSS,{isDisabled:disabled,inject:componentContainerProps.globalCSS});},[componentContainerProps.globalCSS,disabled]);return/*#__PURE__*/_jsxs(_StyledStyledCodeEditor,{ref:observe,style:componentContainerProps.style,className:(_ref3=\"streamlit_code-editor \"+(theme===null||theme===void 0?void 0:theme.base))!==null&&_ref3!==void 0?_ref3:\"\",$_css:componentContainerProps.css,children:[globalCSS,editor,buttons,menu,info]});};export default withStreamlitConnection(CodeEditor);","map":{"version":3,"names":["Streamlit","withStreamlitConnection","useState","useRef","useEffect","useMemo","ace","Editor","Menu","ButtonMenu","Set","ButtonSet","Info","InfoBar","defaultOptions","fontFamily","cursorStyle","displayIndentGuides","wrap","highlightActiveLine","showPrintMargin","showLineNumbers","foldStyle","autoScrollEditorIntoView","animatedScroll","fadeFoldWidgets","defaultEditorProps","editorProps","$blockScrolling","defaultProps","cursorStart","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","focus","fontSize","navigateToFileEnd","placeholder","readOnly","scrollMargin","setOptions","showGutter","style","tabSize","width","debounceChangePeriod","GlobalCSS","createGlobalStyle","props","isDisabled","inject","StyledCodeEditor","styled","div","CodeEditor","args","disabled","theme","code","setCode","aceEditor","infoTextRef","baseSession","keepFocus","timeoutId","createSnippets","snippetRaw","Array","isArray","map","name","split","c","join","snippetAddRemove","setSnippetAddRemove","keybindingAddRemove","setKeybindingAddRemove","clearTimeout","current","editor","onChangeHandler","newCode","commands","description","bindKey","win","mac","exec","outgoingMode","getSession","$modeId","pop","setComponentValue","text","getValue","type","lang","unsecureCopyTextToClipboard","resetEditor","setMode","shortcuts","setKeyboardHandler","handlers","currentHandler","indexOf","$keybindingId","document","getElementById","execCommand","keyCode","key","dispatchEvent","KeyboardEvent","targetQueryString","target","querySelector","innerText","classList","add","classToggle","timeout","setTimeout","remove","responseType","snippetManager","require","snippetText","setSession","snippetsPlusMinus","snippetsPlus","snippetsMinus","snippetsToAdd","snippetsToRemove","langMode","error","snippetConcatText","snippetMap","snip","content","replace","lineCount","match","length","snippetsSession","createEditSession","cursorPos","row","column","moveCursorTo","renderer","scrollCursorIntoView","Autocomplete","for","keybindingsJSON","JSON","parse","keybindings","completer","keyboardHandler","Object","keys","bindkey","stringify","undefined","keybindingsSession","mode","class","querySelectorAll","forEach","el","toggle","command","condition","execute","console","warn","containsNumsStr","executeAll","singleCommand","textField","createElement","value","body","appendChild","select","resizeObserver","ResizeObserver","entries","setFrameHeight","contentBoxSize","blockSize","contentRect","height","observe","divElem","disconnect","themeChoice","isDarkTheme","base","themeProp","componentContainerProps","infoArg","info","menuArg","menu","focusArg","rest","editorArgsString","menuArgsString","infoArgsString","buttonArgsString","themeString","snippets","revertedArgs","button","trim","heightProps","minLines","maxLines","aceEditorProps","aceOptions","partProps","aceProps","buttons","revertedButtons","revertedTheme","customButtonTheme","customButtons","revertedMenu","menuTheme","revertedInfo","infoTheme","globalCSS","css"],"sources":["/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/src/CodeEditor.tsx"],"sourcesContent":["import {\n  Streamlit,\n  withStreamlitConnection,\n  ComponentProps,\n  Theme,\n} from \"streamlit-component-lib\"\nimport styled, { createGlobalStyle } from \"styled-components/macro\"\nimport { useState, useRef, useEffect, useMemo } from \"react\"\nimport AceEditor from \"react-ace\";\nimport ace from \"ace-builds\";\nimport { Editor } from './editor';\nimport { Menu as ButtonMenu, Set as ButtonSet, customButton, buttonGroup, Info as InfoBar } from \"./button-menu\"\n\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/ext-prompt\";\nimport \"ace-builds/src-noconflict/ext-modelist\";\n\ninterface CodeEditorProps extends ComponentProps {\n  args: any\n  width: number\n  disabled: boolean\n  theme?: Theme\n}\n\nconst defaultOptions = {\n  fontFamily: '\"Source Code Pro\", monospace',\n  cursorStyle: \"smooth\",\n  displayIndentGuides: false,\n  wrap: true,\n  highlightActiveLine: true,\n  showPrintMargin: false,\n  showLineNumbers: false,\n  foldStyle: \"markbegin\",\n  autoScrollEditorIntoView: false,\n  animatedScroll: true,\n  fadeFoldWidgets: true,\n}\n\nconst defaultEditorProps = {\n  editorProps: {\n    $blockScrolling: true\n  }\n}\n\nconst defaultProps = {\n  cursorStart: 1,\n  enableBasicAutocompletion: false,\n  enableLiveAutocompletion: true,\n  enableSnippets: true,\n  focus: false,\n  fontSize: 14,\n  highlightActiveLine: true,\n  navigateToFileEnd: true,\n  placeholder: null,\n  readOnly: false,\n  scrollMargin: [15, 15, 0, 0],\n  setOptions: defaultOptions,\n  showGutter: true,\n  showPrintMargin: false,\n  style: {},\n  tabSize: 4,\n  width: \"auto\",\n  debounceChangePeriod: 250,\n}\n\nconst GlobalCSS = createGlobalStyle<{isDisabled?: boolean, inject: string}>`\n  html {\n    opacity: ${props => props.isDisabled? \"0.5\": \"1\"};\n    cursor: ${props => props.isDisabled? \"not-allowed\": \"auto\"};\n    pointer-events: ${props => props.isDisabled? \"none\": \"auto\"};\n  }\n  body {\n    margin: 0;\n    padding: 0;\n  }\n  ${props => props.inject}\n`\nconst StyledCodeEditor = styled.div`\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  :hover button {\n    opacity: 1;\n    transform: scale(1);\n  }\n  button.always-on {\n    opacity: 1;\n    transform: scale(1);\n    transition: none;\n  }\n  :hover button svg {\n        opacity: 1;\n        transform: scale(1);\n  }\n  :hover button.with-icon span {\n    opacity: 1;\n    transform: scale(1);\n  }\n  button.always-on > span {\n    opacity: 1;\n    transform: scale(1);\n    transition: none;\n  }\n  button.always-on > svg {\n    opacity: 1;\n    transform: scale(1);\n    transition: none;\n  }\n  `;\n\nconst CodeEditor = ({ args, width, disabled, theme }: CodeEditorProps) => {\n\n  //sets code to the initial value every time the component is rendered\n  //to set the initial value once, use a function instead of a value.\n  const [code, setCode] = useState(args['code']);\n  // const [keybindingAddRemove, setKeybindingAddRemove] = useState([\"\",\"\"]);\n\n  const aceEditor = useRef<AceEditor>(null);\n  const infoTextRef = useRef<HTMLSpanElement>(null);\n  const baseSession = useRef<ace.Ace.EditSession | null>(null);\n  const keepFocus = useRef<boolean>(false);\n\n  var timeoutId: NodeJS.Timeout;\n\n  /**\n    * This function takes as input either a snippetText string that is expected\n    * to be already formatted like the text in a SnippetFile or a dictionary or \n    * and array of dictionaries. For the first case, it just returns the input.\n    * For the second and third case, a (SnippetFile format) string is constructed\n    * from the dict(s) and returned. Learn more about snippets {@link  here}\n    * @param snippetRaw snippets to be converted to a single snippetText string\n    * @returns {string} snippetText\n    */\n  const createSnippets = (snippetRaw: string | object | [object]): string => {\n    return (typeof snippetRaw === \"string\" ? snippetRaw : (Array.isArray(snippetRaw) ? snippetRaw : [snippetRaw]).map(({ name, code }) =>\n    ([\n      'snippet ' + name,\n      code.split('\\n')\n        .map((c: string) => '\\t' + c)\n        .join('\\n'),\n    ].join('\\n'))\n    ).join('\\n'))\n  }\n  const [snippetAddRemove, setSnippetAddRemove] = useState({[args['lang']] : [createSnippets(args[\"snippets\"][0]), createSnippets(args[\"snippets\"][1])]});\n  const [keybindingAddRemove, setKeybindingAddRemove] = useState(args['keybindings']);\n\n\n  useEffect(() => {\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if(aceEditor.current && keepFocus.current){\n      aceEditor.current.editor.focus();\n      keepFocus.current = false;\n    }\n  }, [keepFocus.current]);\n\n  // To reasons for the useEffect here: \n  //   1. to set the focus on the editor only when the focus argument has changed to true.\n  //   2. to set the focus on the editor after rendering the component at which point, the \n  //      editor should be ready.\n  useEffect(() => {\n    if(aceEditor.current && args['focus']){\n      aceEditor.current.editor.focus();\n    }\n  }, [args.focus]);\n\n  const onChangeHandler = (newCode: string) => {\n    setCode(newCode);\n  }\n\n  // commands is an array of objects containing functions\n  // that the editor can be triggered to call.\n  const commands = { commands: [\n    {\n      name: 'submit', //name for the key binding.\n      description: \"Send 'submit' response\", //description of the command\n      bindKey: { win: 'Ctrl-Enter', mac: 'Command-Enter' }, //key combination used for the command.\n      exec: (editor: any) => {\n        const outgoingMode = editor.getSession().$modeId.split(\"/\").pop();\n        Streamlit.setComponentValue({text: editor.getValue(), type: \"submit\", lang: outgoingMode });\n      }\n    },\n    {\n      name: 'saveState',\n      description: \"Save state\",\n      bindKey: { win: 'Ctrl-Alt-S', mac: 'Command-Alt-S' },\n      exec: (editor: ace.Ace.Editor) => {\n        setCode(editor.getValue());\n      }\n    },\n    {\n      name: 'copyAll',\n      description: \"Copy all text to clipboard\",\n      exec: (editor: ace.Ace.Editor) => {\n        unsecureCopyTextToClipboard(editor.getValue());\n      }\n    },\n    {\n      name: 'reset',\n      exec: () => {\n        resetEditor();\n      }\n    },\n    {\n      name: 'keepFocus',\n      description: \"Return cursor to editor\",\n      exec: () => {\n        keepFocus.current = true;\n      }\n    },\n    {\n      name: \"setMode\",\n      description: \"Set language mode\",\n      exec: (editor: ace.Ace.Editor, lang: string) => {\n          if(lang && typeof lang === \"string\")\n            editor.getSession().setMode(\"ace/mode/\" + lang);\n      },\n      readOnly: true\n    },\n    {\n      name: \"changeShortcuts\",\n      description: \"Switch shortcuts\",\n      exec: (editor: any, shortcuts?: string) => {\n        if(shortcuts && typeof shortcuts === \"string\")\n          editor.setKeyboardHandler(\"ace/keyboard/\" + shortcuts);\n        else {\n          //rotate through the available keyboard handlers\n          const handlers = [\"ace/keyboard/vim\", \"ace/keyboard/emacs\", \"ace/keyboard/sublime\", \"ace/keyboard/vscode\"];\n          const currentHandler = handlers[(handlers.indexOf(editor.$keybindingId) + 1) % 4];\n          editor.setKeyboardHandler(currentHandler);\n        }\n      },\n      readOnly: true\n    },\n    {\n      name: 'toggleKeyboardShortcuts',\n      exec: (editor: ace.Ace.Editor) => {\n        if(!document.getElementById('kbshortcutmenu'))\n          editor.execCommand('showKeyboardShortcuts');\n        else \n          editor.execCommand('simulateKeyPress', {type:\"keydown\", keyCode: 27});\n      }\n    },\n    {\n      name: 'simulateKeyPress',\n      exec: (editor: ace.Ace.Editor, args: {type: string, key?: string, keyCode?: number}) => {\n        if(args.key)\n          document.dispatchEvent(new KeyboardEvent(args.type,{'key': args.key})); \n        else if(args.keyCode)\n          document.dispatchEvent(new KeyboardEvent(args.type,{'keyCode': args.keyCode})); \n      }\n    },\n    {\n      name: 'infoMessage',\n      description: \"Display message in info bar\",\n      exec: (editor: ace.Ace.Editor, args: {text: string, timeout?: number, classToggle?: string, targetQueryString?: string} ) => {\n        if(args.targetQueryString){\n          const target = document.querySelector(args.targetQueryString) as HTMLElement;\n          if(target){\n            target.innerText = args.text;\n            target.classList.add(args.classToggle || \"\")\n            if(args.timeout){\n              timeoutId = setTimeout(() => {\n                target.classList.remove(args.classToggle || \"\");\n              }, args.timeout);\n            }\n          }\n        }\n        else if(infoTextRef.current){\n          infoTextRef.current.innerText = args.text;\n          infoTextRef.current.classList.add(args.classToggle || \"\");\n          if(args.timeout){\n            timeoutId = setTimeout(() => {\n              infoTextRef.current?.classList.remove(args.classToggle || \"\");\n            }, args.timeout);\n          }\n        }\n      }\n    },\n    {\n      name: 'response', //name for the key binding.\n      description: \"Send custom response\", //description of the command\n      exec: (editor: any, responseType = \"\") => {\n        const outgoingMode = editor.getSession().$modeId.split(\"/\").pop();\n        Streamlit.setComponentValue({ text: code, type: responseType, lang: outgoingMode });\n      }\n    },\n    {\n      name: 'editSnippets',\n      description: \"Edit snippets\",\n      bindKey: { win: 'Ctrl-Alt-M', mac: 'Command-Alt-M' },\n      exec: (editor: any) => {\n        const snippetManager = ace.require('ace/snippets').snippetManager;\n        if(baseSession.current){\n          const outgoingMode = editor.getSession().$modeId.split(\"/\").pop();\n          if(outgoingMode === \"snippets\"){\n            const snippetText = editor.getSession().getValue();\n            editor.setSession(baseSession.current);\n            baseSession.current = null;\n            setCode(editor.getSession().getValue());\n            if(outgoingMode === \"snippets\"){}\n            try{\n              const snippetsPlusMinus = snippetText.split(\"###~~~\")[1];\n              const [snippetsPlus, snippetsMinus] = snippetsPlusMinus.split(\"###---\");\n              const snippetsToAdd = snippetsPlus.split(\"###+++\")[1];\n              const snippetsToRemove = snippetsMinus;\n              const langMode = editor.getSession().$modeId.split(\"/\").pop();\n              setSnippetAddRemove({[langMode] : [snippetAddRemove[langMode][0] + snippetsToAdd, snippetAddRemove[langMode][1] + snippetsToRemove]});\n            } catch (error) {\n              editor.execCommand(\"infoMessage\",{text: \"error parsing file, restoring original file\", timeout: 2000, classToggle: \"show\"});\n            }\n          }\n        } else {\n          const langMode = editor.getSession().$modeId.split(\"/\").pop()\n          const snippetConcatText = `\\n###~~~#(DO NOT EDIT THIS LINE)\n# Commented out above are all the snippets that are currently\n# registered for ${args['lang']} mode.\n\\n\\n###+++#(DO NOT EDIT THIS LINE) \\n# Put the snippets you want to add below this line.\\n\\n\\n\\n\n\\n\\n\\n###---#(DO NOT EDIT THIS LINE) \\n# Put the snippets you want to remove below this line.\\n\\n\\n\\n\\n\\n\\n`;\n          const snippetText = \"#\" + createSnippets(snippetManager.snippetMap[langMode].map((snip: any) => ({name: snip.name, code: snip.content}))).replace(/\\n/g, \"\\n#\") + snippetConcatText;\n          // snippetManager.files[editor.getSession().$modeId].snippetText\n          const lineCount = (snippetText.match(/\\n/g) || []).length;\n          baseSession.current = editor.getSession();\n          const snippetsSession = ace.createEditSession(snippetText, \"ace/mode/snippets\");\n          editor.setSession(snippetsSession);\n          const cursorPos = {row: (lineCount - 15)>0? lineCount - 15 : 0, column: 0};\n          editor.moveCursorTo(cursorPos.row, cursorPos.column);\n          editor.renderer.scrollCursorIntoView(cursorPos, 0.5);\n        }\n      }\n    },\n    {\n      name: 'editKeyBindings',\n      description: \"Edit keybindings\",\n      bindKey: { win: 'Ctrl-Alt-B', mac: 'Command-Alt-B' },\n      exec: (editor: any) => {\n        ace.require('ace/autocomplete').Autocomplete.for(editor);\n        if(baseSession.current){\n          const outgoingMode = editor.getSession().$modeId.split(\"/\").pop();\n          if(outgoingMode === \"json\"){\n            const keybindingsJSON = editor.getSession().getValue();\n            editor.setSession(baseSession.current);\n            baseSession.current = null;\n            setCode(editor.getSession().getValue());\n            try{\n              setKeybindingAddRemove(JSON.parse(keybindingsJSON));\n            } catch (error) {\n              editor.execCommand(\"infoMessage\",{text: \"error parsing file, restoring original file\", timeout: 2000, classToggle: \"show\"});\n            }\n          }\n        } else {\n          const keybindings = {commands: {}, completer: {}};\n          if(editor.completer && editor.completer.keyboardHandler.commands){\n            keybindings.completer = Object.keys(editor.completer.keyboardHandler.commands).map((key: any) => ({bindkey: editor.completer.keyboardHandler.commands[key].bindKey ?? \"\", name: editor.completer.keyboardHandler.commands[key].name}));\n          }\n          if(editor.commands.commands){\n            keybindings.commands = Object.keys(editor.commands.commands).map((key: any) => ({bindkey: editor.commands.commands[key].bindKey ?? \"\", name: editor.commands.commands[key].name}));\n          }\n          const keybindingsJSON = JSON.stringify(keybindings, undefined, 2);\n          baseSession.current = editor.getSession();\n          const keybindingsSession = ace.createEditSession(keybindingsJSON, \"ace/mode/json\");\n          editor.setSession(keybindingsSession);\n        }\n      }\n    },\n    {\n      name: 'exitSession', //name for the key binding.\n      bindKey: { win: 'Esc', mac: 'Esc' },\n      description: \"Return to main session (keep changes)\", //description of the command\n      exec: (editor: any) => {\n        if(baseSession.current){\n          const mode = editor.getSession().$modeId.split(\"/\").pop();\n          if (mode === \"snippets\")\n            editor.execCommand(\"editSnippets\");\n          else if (mode === \"json\")\n            editor.execCommand(\"editKeyBindings\");\n        }\n      }\n    },\n    {\n      name: 'abandonSession', //name for the key binding.\n      bindKey: { win: 'Ctrl-Alt-Esc', mac: 'Command-Alt-Esc' },\n      description: \"Return to main session (discard changes)\", //description of the command\n      exec: (editor: any) => {\n        if(baseSession.current){\n          editor.setSession(baseSession.current);\n          baseSession.current = null;\n          setCode(editor.getSession().getValue());\n        }\n      }\n    },\n    {\n      name: 'classART', //name for the key binding.\n      description: \"Add/Remove/Toggle class for element\", //description of the command\n      exec: (editor: any, args: {targetQueryString: string, type: string, class: string}) => {\n        if(args.targetQueryString && args.type && args.class){\n          switch(args.type){\n            case \"add\":\n              document.querySelectorAll(args.targetQueryString)?.forEach((el: any) => el.classList.add(args.class));\n              break;\n            case \"remove\":\n              document.querySelectorAll(args.targetQueryString)?.forEach((el: any) => el.classList.remove(args.class));\n              break;\n            case \"toggle\":\n              document.querySelectorAll(args.targetQueryString)?.forEach((el: any) => el.classList.toggle(args.class));\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    },\n    {\n      name: 'conditionalExecute', //name for the key binding.\n      description: \"Execute command if element exists\", //description of the command\n      exec: (editor: any, args: {targetQueryString: string, command: any[], condition?: boolean}) => {\n        if(args.targetQueryString && args.command && Array.isArray(args.command)){\n          if(!(args.condition ?? true) === !document.querySelector(args.targetQueryString)){\n            typeof args.command[0] === \"string\" ? execute(args.command[0], args.command[1]) : console.warn(\"Editor command - conditionalExecute: improper command format! Command array must contain name of command as first element and arguments as second element.\");\n          }\n        }\n      }\n    }\n  ]};\n\n  const execute = (command: string, args: any = \"\") => {\n    const editor = aceEditor.current?.editor;\n    if (editor) {\n      if (!args) {\n        editor.execCommand(command)\n      }\n      else if (typeof args === \"number\" || typeof args === \"string\") {\n        editor.execCommand(command, args);\n      }\n      else if (typeof args === \"object\" && !Array.isArray(args)) {\n        var containsNumsStr = true;\n        Object.keys(args).forEach((key: any) => {\n          containsNumsStr = typeof args[key] === \"string\" || typeof args[key] === \"number\" || Array.isArray(args[key]);\n        });\n        if (Object.keys(args).length < 4 && containsNumsStr) {\n          editor.execCommand(command, args);\n        }\n      }\n      else {\n        console.warn(`Function - execute: failed to parse/execute \"${command}\" command!`);\n      }\n    }\n  }\n\n  const executeAll = (commands: any[]) => {\n    commands.forEach(singleCommand => {\n      if (Array.isArray(singleCommand)) {\n        typeof singleCommand[0] === \"string\" ? execute(singleCommand[0], singleCommand[1]) : console.warn(\"Function - executeAll: improper command format! Singular commands must contain name of command as first element and arguments as second element.\");\n      } else if (typeof singleCommand === \"string\") {\n        execute(singleCommand);\n      } else {\n        console.warn(\"Function - executeAll: failed to parse/execute command(s)!\");\n      }\n    });\n  }\n\n  const resetEditor = () => {\n    setCode(args['code']);\n  }\n\n  const unsecureCopyTextToClipboard = (text: string) => {\n    const textField = document.createElement('textarea');\n    textField.value = text;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand('copy');\n    textField.remove();\n  }\n\n  /**\n   * resizeObserver observes changes in elements its given to observe and is used here\n   * to communicate to streamlit the height of the component that has changed\n   * so that streamlit can adjust the iframe containing the component accordingly.\n   */\n  const resizeObserver = new ResizeObserver((entries: any) => {\n    // If we know that the body will always fully contain our component (without cutting it off)\n    // then we can use docuemnt.body height instead\n    Streamlit.setFrameHeight((entries[0].contentBoxSize.blockSize ?? entries[0].contentRect.height)); \n  })\n\n  const observe = (divElem: any) => {\n    divElem ? resizeObserver.observe(divElem as HTMLDivElement) : resizeObserver.disconnect();\n  }\n\n  /**\n   * This could also be memoized but I don't think it would be necessary because its not expensive.\n   */\n  const themeChoice = () => {\n    const isDarkTheme = theme? theme.base === \"dark\" : true;\n    switch (args['theme']) {\n      case \"contrast\":\n        return isDarkTheme? \"streamlit_light\" : \"streamlit_dark\";\n      case \"light\":\n        return \"streamlit_light\";\n      case \"dark\":\n        return \"streamlit_dark\";\n      case \"default\":\n        return isDarkTheme? \"streamlit_dark\" : \"streamlit_light\";\n      default:\n        return isDarkTheme? \"streamlit_dark\" : \"streamlit_light\";\n    }\n  }\n\n  const themeProp = themeChoice();\n  const componentContainerProps = args[\"component_props\"];\n\n  const {info: infoArg, menu: menuArg, focus: focusArg, ...rest} = args;\n  const editorArgsString = JSON.stringify(rest);\n  const menuArgsString = JSON.stringify(menuArg);\n  const infoArgsString = JSON.stringify(infoArg);\n  const buttonArgsString = JSON.stringify(args['buttons']);\n  const themeString = JSON.stringify(theme);\n  const snippets = JSON.stringify(snippetAddRemove);\n\n  /**\n   * This section contains the main sub-components (child components). These components are wrapped in useMemos\n   * in order to prevent unnecessary re-rendering of the components. This is listed as one of its use cases in the\n   * React docs ({@link https://beta.reactjs.org/reference/react/useMemo#skipping-re-rendering-of-components Skipping re-rendering of components})\n   *\n   * This component is the editor component that is rendered. It is only re-rendered when\n   * certain properties change. This is important because we should account for the possibility that the editor \n   * is being used at any given moment. Unnecessary and frequent re-rendering of the editor (for outside reasons\n   * especially) can impact user experience and responsiveness.\n   */\n  const editor = useMemo(() => {\n    const keybindings = JSON.stringify(keybindingAddRemove);\n    const revertedArgs = JSON.parse(editorArgsString);\n\n    // Create commands for each button\n    if(revertedArgs['buttons'].length > 0) {\n      revertedArgs['buttons'].forEach((button: any) => {\n          commands.commands = [...commands.commands, {\n            name: (button.name as string).trim().replace(/\\s+/g, '_') + '_button',\n            description: \"Execute '\" + button.name + \"' button command(s)\",\n            exec: () => {\n            executeAll(button.commands);\n          }}];\n      });\n    }\n\n    let heightProps = {};\n    if(typeof revertedArgs['height'] === \"number\") \n      heightProps = {minLines: 1, maxLines: revertedArgs['height']};\n    else if(typeof revertedArgs['height'] === \"string\") \n      heightProps = {height: revertedArgs['height']};\n    else if(Array.isArray(revertedArgs['height']) && revertedArgs['height'].length === 2) \n      heightProps = {minLines: revertedArgs['height'][0], maxLines: revertedArgs['height'][1]};\n\n    const aceEditorProps = { ...defaultEditorProps, ...revertedArgs['editorProps'] };\n    const aceOptions = { ...defaultOptions, ...revertedArgs['options'] };\n    const partProps = { setOptions: aceOptions, editorProps: aceEditorProps };\n    const aceProps = { ...defaultProps, ...partProps,...heightProps, ...revertedArgs['props'] };\n\n    /**\n     * TODO: Remove props from aceProps that we don't want to allow user access to.\n     */\n    return (\n        <Editor\n         editorRef={aceEditor}\n         code={code} \n         lang={revertedArgs['lang']} \n         theme={themeProp} \n         shortcuts={revertedArgs['shortcuts']} \n         snippetString={snippets} \n         commands={commands.commands} \n         keybindingString={keybindings} \n         props={aceProps} \n         onChange={(value) => onChangeHandler(value)} />\n      );\n  }, [editorArgsString, themeProp, snippets, keybindingAddRemove]);\n\n  const buttons = useMemo(() => {\n    const revertedButtons = JSON.parse(buttonArgsString);\n    const revertedTheme = JSON.parse(themeString);\n    const customButtonTheme = revertedTheme ?? {};\n    const customButtons = {buttons: (revertedButtons ?? []) as customButton[], name: \"customButtons\"} as buttonGroup;\n    return (\n      < ButtonSet\n       buttonGroup={customButtons} \n       theme={customButtonTheme} \n       themeProp={themeProp} \n       executeAll={(commands) => executeAll(commands)} />\n    );\n  }, [buttonArgsString, themeString, themeProp]);\n\n  const menu = useMemo(() => {\n    const revertedMenu = JSON.parse(menuArgsString);\n    const revertedTheme = JSON.parse(themeString);\n    const menuTheme = revertedTheme ?? {};\n    return (\n      <ButtonMenu\n       menu={revertedMenu} \n       theme={menuTheme} \n       themeProp={themeProp} \n       executeAll={(commands) => executeAll(commands)} />\n    );\n  }, [menuArgsString, themeString, themeProp]);\n\n  const info = useMemo(() => {\n    const revertedInfo = JSON.parse(infoArgsString);\n    const revertedTheme = JSON.parse(themeString);\n    const infoTheme = revertedTheme ?? {};\n    return (\n      <InfoBar\n       infoRef={infoTextRef} \n       info={revertedInfo} \n       theme={infoTheme} />\n    );\n  }, [infoArgsString, themeString]);\n\n  const globalCSS = useMemo(() => {\n    return (\n      <GlobalCSS isDisabled={disabled} inject={componentContainerProps.globalCSS} />\n    );\n  }, [componentContainerProps.globalCSS, disabled]);\n\n  return (\n    <StyledCodeEditor ref={observe} style={componentContainerProps.style} css={componentContainerProps.css} className={\"streamlit_code-editor \" + theme?.base ?? \"\" } >\n      {globalCSS}\n      {editor}\n      {buttons}\n      {menu}\n      {info}\n    </StyledCodeEditor>\n  )\n}\n\nexport default withStreamlitConnection(CodeEditor)"],"mappings":"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"},"metadata":{},"sourceType":"module"}