{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/anasb/Google Drive/Colab Notebooks/streamlit/custom-components/CodeEditor/my_component/frontend/src/MyComponent.tsx\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport AceEditor from \"react-ace\";\nimport { UndoManager } from \"ace-builds\";\nimport { Play as PlayIcon, Copy as CopyIcon } from \"react-feather\";\n//import UndoManager from \"react-ace\"\n\nimport styled from \"styled-components\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-one_dark\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/keybinding-vscode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// /** Focus handler for our \"Click Me!\" button. */\n// function onChange(value: string, event?: any){\n//   console.log(\"change\", value);\n// }\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass MyComponent extends StreamlitComponentBase {\n  constructor() {\n    super(...arguments);\n    this.defaultUndoManager = new UndoManager();\n    this.state = {\n      code: \"\",\n      lang: \"python\",\n      isFocused: false,\n      cursorPosition: {\n        row: 0,\n        column: 1\n      },\n      undoManager: this.defaultUndoManager\n    };\n    this.render = () => {\n      // // Arguments that are passed to the plugin in Python are accessible\n      // // via `this.props.args`. Here, we access the \"name\" arg.\n      // const code = this.props.args[\"code\"]\n\n      // Streamlit sends us a theme object via props that we can use to ensure\n      // that our component has visuals that match the active theme in a\n      // streamlit app.\n      const {\n        theme\n      } = this.props;\n      const style = {};\n      console.log(theme);\n\n      // Maintain compatibility with older versions of Streamlit that don't send\n      // a theme object.\n      if (theme) {\n        // Use the theme object to style our button border. Alternatively, the\n        // theme style is defined in CSS vars.\n        const borderStyling = `1px solid ${this.state.isFocused ? theme.primaryColor : \"gray\"}`;\n        style.border = borderStyling;\n        style.outline = borderStyling;\n        style.top = \"none\";\n        style.bottom = \"none\";\n      }\n      console.log(\"render\");\n      const StyledCodeEditor = styled.div(_ref => {\n        let {\n          theme\n        } = _ref;\n        return {\n          height: \"5rem\",\n          borderRadius: \"4px\",\n          overflow: \"visible\",\n          \":hover\": {\n            a: {\n              opacity: 1,\n              transform: \"scale(1)\",\n              transition: \"none\"\n            }\n          }\n        };\n      });\n\n      // const StyledIconContainer = styled.div(({theme}) => ({\n      //   position: \"relative\",\n      //   left: \"calc(-2.5rem - 0.5rem)\",\n      //   width: \"calc(100% + 2.5rem + 0.5rem)\",\n      //   display: \"flex\",\n      //   alignItems: \"center\",\n      //   overflow: \"visible\",\n      //   \":hover\": {\n      //     a: {\n      //       opacity: 1,\n      //       transform: \"scale(1)\",\n      //       transition: \"none\",\n      //     },\n      //   },\n      // }))\n\n      const StyledIcon = styled.a(_ref2 => {\n        let {\n          theme\n        } = _ref2;\n        return {\n          //marginRight: \"0.5rem\",\n\n          // center icon\n          lineHeight: 0,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          // copied from full screen button\n          transform: \"scale(0)\",\n          transition: \"opacity 300ms 150ms, transform 300ms 150ms\",\n          opacity: 0,\n          position: \"absolute\",\n          top: theme.top,\n          left: \"2px\",\n          bottom: theme.bottom,\n          height: \"2.5rem\",\n          width: \"2.5rem\",\n          zIndex: 101,\n          border: \"none\",\n          backgroundColor: theme.lightenedBg05,\n          borderRadius: \"50%\",\n          svg: {\n            stroke: theme.fadedText60\n          },\n          \"&:hover svg\": {\n            stroke: theme.bodyText\n          }\n        };\n      });\n      return /*#__PURE__*/_jsxDEV(StyledCodeEditor, {\n        children: [/*#__PURE__*/_jsxDEV(StyledIcon, {\n          theme: {\n            top: \"2px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CopyIcon, {\n            size: \"16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n          mode: \"python\",\n          theme: \"one_dark\",\n          keyboardHandler: \"vscode\",\n          value: this.state.code,\n          cursorStart: 1,\n          fontSize: 14,\n          width: \"auto\",\n          onBeforeLoad: editor => {\n            console.log(\"Before load:\");\n            console.log(editor);\n            console.log(typeof editor);\n          },\n          onLoad: editor => {\n            console.log(\"On load:\");\n            console.log(editor);\n            console.log(typeof editor);\n            editor.getSession().setUndoManager(this.state.undoManager);\n            const cursorPos = this.state.cursorPosition;\n            console.log(cursorPos);\n            editor.moveCursorTo(cursorPos.row, cursorPos.column);\n            editor.renderer.scrollCursorIntoView(cursorPos, 0.5);\n            editor.renderer.setScrollMargin(15, 15, 10, 10);\n            //editor.resize();\n          },\n\n          name: \"UNIQUE_ID_OF_DIV\",\n          scrollMargin: [15, 15, 10, 10],\n          editorProps: {\n            $blockScrolling: true\n          },\n          setOptions: {\n            maxLines: 10,\n            minLines: 10,\n            fontFamily: '\"Source Code Pro\", monospace',\n            cursorStyle: \"smooth\",\n            displayIndentGuides: false,\n            wrap: true,\n            highlightActiveLine: true,\n            showPrintMargin: false,\n            showLineNumbers: false,\n            foldStyle: \"markbegin\",\n            enableLiveAutocompletion: true\n          },\n          commands: [{\n            // commands is array of key bindings.\n            name: 'submit',\n            //name for the key binding.\n            bindKey: {\n              win: 'Ctrl-Enter',\n              mac: 'Command-Enter'\n            },\n            //key combination used for the command.\n            exec: editor => {\n              console.log(\"submit keys pressed\");\n              this.setState({\n                code: editor.getValue(),\n                cursorPosition: editor.getCursorPosition(),\n                undoManager: editor.getSession().getUndoManager()\n              });\n              Streamlit.setComponentValue({\n                type: \"submit\",\n                code: this.state.code\n              });\n            } //function to execute when keys are pressed.\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StyledIcon, {\n          theme: {\n            bottom: \"1px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(PlayIcon, {\n            size: \"16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this);\n    };\n  }\n  componentDidMount() {\n    console.log(\"mounted\");\n    this.setState({\n      code: this.props.args[\"code\"]\n    });\n    super.componentDidMount();\n  }\n  componentDidUpdate() {\n    console.log(\"updated\");\n    super.componentDidUpdate();\n  }\n}\n\n//==========================================================================\n// Extra snippets of code\n//   /** Blur handler for our \"Click Me!\" button. */\n//   private _onBlur = (): void => {\n//     this.setState({ isFocused: false })\n//   }\n// }\n\n// /** Click handler for our \"Click Me!\" button. */\n// private onClicked = (): void => {\n//   // Increment state.numClicks, and pass the new value back to\n//   // Streamlit via `Streamlit.setComponentValue`.\n//   this.setState(\n//     prevState => ({ numClicks: prevState.numClicks + 1 }),\n//     () => Streamlit.setComponentValue(this.state.numClicks)\n//   )\n// }\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\n\nexport default _c = withStreamlitConnection(MyComponent);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","AceEditor","UndoManager","Play","PlayIcon","Copy","CopyIcon","styled","MyComponent","defaultUndoManager","state","code","lang","isFocused","cursorPosition","row","column","undoManager","render","theme","props","style","console","log","borderStyling","primaryColor","border","outline","top","bottom","StyledCodeEditor","div","height","borderRadius","overflow","a","opacity","transform","transition","StyledIcon","lineHeight","display","alignItems","justifyContent","position","left","width","zIndex","backgroundColor","lightenedBg05","svg","stroke","fadedText60","bodyText","editor","getSession","setUndoManager","cursorPos","moveCursorTo","renderer","scrollCursorIntoView","setScrollMargin","$blockScrolling","maxLines","minLines","fontFamily","cursorStyle","displayIndentGuides","wrap","highlightActiveLine","showPrintMargin","showLineNumbers","foldStyle","enableLiveAutocompletion","name","bindKey","win","mac","exec","setState","getValue","getCursorPosition","getUndoManager","setComponentValue","type","componentDidMount","args","componentDidUpdate"],"sources":["/mnt/c/Users/anasb/Google Drive/Colab Notebooks/streamlit/custom-components/CodeEditor/my_component/frontend/src/MyComponent.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport AceEditor from \"react-ace\";\nimport { UndoManager } from \"ace-builds\";\n\nimport { Play as PlayIcon, Copy as CopyIcon } from \"react-feather\"\n//import UndoManager from \"react-ace\"\n\nimport styled from \"styled-components\"\n\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-one_dark\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/keybinding-vscode\";\nimport { relative } from \"path\";\n\ninterface State {\n  code: string\n  lang: string\n  isFocused: boolean\n  undoManager: object\n  cursorPosition: object\n}\n\n// /** Focus handler for our \"Click Me!\" button. */\n// function onChange(value: string, event?: any){\n//   console.log(\"change\", value);\n// }\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass MyComponent extends StreamlitComponentBase<State> {\n  private defaultUndoManager = new UndoManager();\n  public state = {code: \"\", lang: \"python\", isFocused: false, cursorPosition: {row: 0, column: 1}, undoManager: this.defaultUndoManager}\n\n  //reactAceComponent = this.refs.reactAceComponent;\n\n\n  public render = (): ReactNode => {\n    // // Arguments that are passed to the plugin in Python are accessible\n    // // via `this.props.args`. Here, we access the \"name\" arg.\n    // const code = this.props.args[\"code\"]\n\n    // Streamlit sends us a theme object via props that we can use to ensure\n    // that our component has visuals that match the active theme in a\n    // streamlit app.\n    const { theme } = this.props\n    const style: React.CSSProperties = {}\n    \n    console.log(theme)\n\n    // Maintain compatibility with older versions of Streamlit that don't send\n    // a theme object.\n    if (theme) {\n      // Use the theme object to style our button border. Alternatively, the\n      // theme style is defined in CSS vars.\n      const borderStyling = `1px solid ${\n        this.state.isFocused ? theme.primaryColor : \"gray\"\n      }`\n      style.border = borderStyling\n      style.outline = borderStyling\n      style.top = \"none\"\n      style.bottom = \"none\"\n    }\n\n    console.log(\"render\");\n    const StyledCodeEditor = styled.div(({ theme }) => ({\n      height: \"5rem\",\n      borderRadius: \"4px\",\n      overflow: \"visible\",\n      \":hover\": {\n        a: {\n          opacity: 1,\n          transform: \"scale(1)\",\n          transition: \"none\",\n        },\n      },\n    }))\n\n    // const StyledIconContainer = styled.div(({theme}) => ({\n    //   position: \"relative\",\n    //   left: \"calc(-2.5rem - 0.5rem)\",\n    //   width: \"calc(100% + 2.5rem + 0.5rem)\",\n    //   display: \"flex\",\n    //   alignItems: \"center\",\n    //   overflow: \"visible\",\n    //   \":hover\": {\n    //     a: {\n    //       opacity: 1,\n    //       transform: \"scale(1)\",\n    //       transition: \"none\",\n    //     },\n    //   },\n    // }))\n    \n    const StyledIcon = styled.a(({ theme }) => ({\n      //marginRight: \"0.5rem\",\n    \n      // center icon\n      lineHeight: 0,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    \n      // copied from full screen button\n      transform: \"scale(0)\",\n      transition: \"opacity 300ms 150ms, transform 300ms 150ms\",\n      opacity: 0,\n      position: \"absolute\",\n      top: theme.top,\n      left: \"2px\",\n      bottom: theme.bottom,\n      height: \"2.5rem\",\n      width: \"2.5rem\",\n      zIndex: 101,\n      border: \"none\",\n      backgroundColor: theme.lightenedBg05,\n      borderRadius: \"50%\",\n      svg: {\n        stroke: theme.fadedText60,\n      }, \n      \"&:hover svg\": {\n        stroke: theme.bodyText,\n      },\n    }))\n\n    return (\n      <StyledCodeEditor>\n        <StyledIcon theme={{top: \"2px\"}}>\n          <CopyIcon size=\"16\" />\n        </StyledIcon>\n        <AceEditor\n          mode=\"python\"\n          theme=\"one_dark\"\n          keyboardHandler=\"vscode\"\n          value={this.state.code}\n          cursorStart={1}\n          fontSize={14} \n          width=\"auto\"\n          onBeforeLoad={(editor: object) => {\n            console.log(\"Before load:\");\n            console.log(editor);\n            console.log(typeof(editor));\n          }}\n          onLoad={(editor: any) => {\n            console.log(\"On load:\");\n            console.log(editor);\n            console.log(typeof(editor));\n\n            editor.getSession().setUndoManager(this.state.undoManager);\n\n            const cursorPos = this.state.cursorPosition;\n            console.log(cursorPos);\n            editor.moveCursorTo(cursorPos.row, cursorPos.column);\n            editor.renderer.scrollCursorIntoView(cursorPos, 0.5);\n            editor.renderer.setScrollMargin(15,15,10,10);\n            //editor.resize();\n          }}\n          name=\"UNIQUE_ID_OF_DIV\"\n          scrollMargin={[15,15,10,10]}\n          editorProps={{ \n            $blockScrolling: true\n          }}\n          setOptions={{\n            maxLines: 10,\n            minLines: 10,\n            fontFamily: '\"Source Code Pro\", monospace',\n            cursorStyle: \"smooth\",\n            displayIndentGuides: false,\n            wrap: true,\n            highlightActiveLine: true,\n            showPrintMargin: false,\n            showLineNumbers: false,\n            foldStyle: \"markbegin\",\n            enableLiveAutocompletion: true\n          }}\n          commands={[{   // commands is array of key bindings.\n            name: 'submit', //name for the key binding.\n            bindKey: {win: 'Ctrl-Enter', mac: 'Command-Enter'}, //key combination used for the command.\n            exec: (editor) => {\n               console.log(\"submit keys pressed\")\n               this.setState({code: editor.getValue(), cursorPosition: editor.getCursorPosition(), undoManager: editor.getSession().getUndoManager()});\n               Streamlit.setComponentValue({ type: \"submit\", code: this.state.code})}  //function to execute when keys are pressed.\n          }]}\n        />\n        <StyledIcon theme={{bottom: \"1px\"}}>\n          <PlayIcon size=\"16\" />\n        </StyledIcon>\n      </StyledCodeEditor>\n    )\n  }\n\n  public componentDidMount(): void {\n    console.log(\"mounted\");\n    this.setState({code: this.props.args[\"code\"]});\n    super.componentDidMount();\n  }\n  \n  public componentDidUpdate(): void {\n    console.log(\"updated\");\n    super.componentDidUpdate();\n  }\n}\n\n  //==========================================================================\n  // Extra snippets of code\n  //   /** Blur handler for our \"Click Me!\" button. */\n  //   private _onBlur = (): void => {\n  //     this.setState({ isFocused: false })\n  //   }\n  // }\n  \n    // /** Click handler for our \"Click Me!\" button. */\n    // private onClicked = (): void => {\n    //   // Increment state.numClicks, and pass the new value back to\n    //   // Streamlit via `Streamlit.setComponentValue`.\n    //   this.setState(\n    //     prevState => ({ numClicks: prevState.numClicks + 1 }),\n    //     () => Streamlit.setComponentValue(this.state.numClicks)\n    //   )\n    // }\n  \n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\n\nexport default withStreamlitConnection(MyComponent)"],"mappings":"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"},"metadata":{},"sourceType":"module"}