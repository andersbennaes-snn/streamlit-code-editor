{"ast":null,"code":"import _regeneratorRuntime from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncIterator from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays } from '../util/buffer';\nimport { isPromise, isFetchResponse, isIterable, isAsyncIterable, isReadableDOMStream, isReadableNodeStream } from '../util/compat';\n/** @ignore */\nexport var AsyncByteQueue = /*#__PURE__*/function (_AsyncQueue) {\n  _inherits(AsyncByteQueue, _AsyncQueue);\n  var _super = _createSuper(AsyncByteQueue);\n  function AsyncByteQueue() {\n    _classCallCheck(this, AsyncByteQueue);\n    return _super.apply(this, arguments);\n  }\n  _createClass(AsyncByteQueue, [{\n    key: \"write\",\n    value: function write(value) {\n      if ((value = toUint8Array(value)).byteLength > 0) {\n        return _get(_getPrototypeOf(AsyncByteQueue.prototype), \"write\", this).call(this, value);\n      }\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var sync = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return sync ? decodeUtf8(this.toUint8Array(true)) : this.toUint8Array(false).then(decodeUtf8);\n    }\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      var _this = this;\n      var sync = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return sync ? joinUint8Arrays(this._values)[0] : _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var buffers, byteLength, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              buffers = [], byteLength = 0;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 3;\n              _iterator = _asyncIterator(_this);\n            case 5:\n              _context.next = 7;\n              return _iterator.next();\n            case 7:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 14;\n                break;\n              }\n              chunk = _step.value;\n              buffers.push(chunk);\n              byteLength += chunk.byteLength;\n            case 11:\n              _iteratorAbruptCompletion = false;\n              _context.next = 5;\n              break;\n            case 14:\n              _context.next = 20;\n              break;\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n            case 20:\n              _context.prev = 20;\n              _context.prev = 21;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 25;\n                break;\n              }\n              _context.next = 25;\n              return _iterator.return();\n            case 25:\n              _context.prev = 25;\n              if (!_didIteratorError) {\n                _context.next = 28;\n                break;\n              }\n              throw _iteratorError;\n            case 28:\n              return _context.finish(25);\n            case 29:\n              return _context.finish(20);\n            case 30:\n              return _context.abrupt(\"return\", joinUint8Arrays(buffers, byteLength)[0]);\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[3, 16, 20, 30], [21,, 25, 29]]);\n      }))();\n    }\n  }]);\n  return AsyncByteQueue;\n}(AsyncQueue);\n/** @ignore */\nexport var ByteStream = /*#__PURE__*/function (_Symbol$iterator) {\n  function ByteStream(source) {\n    _classCallCheck(this, ByteStream);\n    if (source) {\n      this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n    }\n  }\n  _createClass(ByteStream, [{\n    key: _Symbol$iterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      return this.source.next(value);\n    }\n  }, {\n    key: \"throw\",\n    value: function _throw(value) {\n      return this.source.throw(value);\n    }\n  }, {\n    key: \"return\",\n    value: function _return(value) {\n      return this.source.return(value);\n    }\n  }, {\n    key: \"peek\",\n    value: function peek(size) {\n      return this.source.peek(size);\n    }\n  }, {\n    key: \"read\",\n    value: function read(size) {\n      return this.source.read(size);\n    }\n  }]);\n  return ByteStream;\n}(Symbol.iterator);\n/** @ignore */\nexport var AsyncByteStream = /*#__PURE__*/function (_Symbol$asyncIterator) {\n  function AsyncByteStream(source) {\n    _classCallCheck(this, AsyncByteStream);\n    if (source instanceof AsyncByteStream) {\n      this.source = source.source;\n    } else if (source instanceof AsyncByteQueue) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n    } else if (isReadableNodeStream(source)) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n    } else if (isReadableDOMStream(source)) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n    } else if (isFetchResponse(source)) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body));\n    } else if (isIterable(source)) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n    } else if (isPromise(source)) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n    } else if (isAsyncIterable(source)) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n    }\n  }\n  _createClass(AsyncByteStream, [{\n    key: _Symbol$asyncIterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      return this.source.next(value);\n    }\n  }, {\n    key: \"throw\",\n    value: function _throw(value) {\n      return this.source.throw(value);\n    }\n  }, {\n    key: \"return\",\n    value: function _return(value) {\n      return this.source.return(value);\n    }\n  }, {\n    key: \"closed\",\n    get: function get() {\n      return this.source.closed;\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel(reason) {\n      return this.source.cancel(reason);\n    }\n  }, {\n    key: \"peek\",\n    value: function peek(size) {\n      return this.source.peek(size);\n    }\n  }, {\n    key: \"read\",\n    value: function read(size) {\n      return this.source.read(size);\n    }\n  }]);\n  return AsyncByteStream;\n}(Symbol.asyncIterator);\n/** @ignore */\nvar ByteStreamSource = /*#__PURE__*/function () {\n  function ByteStreamSource(source) {\n    _classCallCheck(this, ByteStreamSource);\n    this.source = source;\n  }\n  _createClass(ByteStreamSource, [{\n    key: \"cancel\",\n    value: function cancel(reason) {\n      this.return(reason);\n    }\n  }, {\n    key: \"peek\",\n    value: function peek(size) {\n      return this.next(size, 'peek').value;\n    }\n  }, {\n    key: \"read\",\n    value: function read(size) {\n      return this.next(size, 'read').value;\n    }\n  }, {\n    key: \"next\",\n    value: function next(size) {\n      var cmd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'read';\n      return this.source.next({\n        cmd: cmd,\n        size: size\n      });\n    }\n  }, {\n    key: \"throw\",\n    value: function _throw(value) {\n      return Object.create(this.source.throw && this.source.throw(value) || ITERATOR_DONE);\n    }\n  }, {\n    key: \"return\",\n    value: function _return(value) {\n      return Object.create(this.source.return && this.source.return(value) || ITERATOR_DONE);\n    }\n  }]);\n  return ByteStreamSource;\n}();\n/** @ignore */\nvar AsyncByteStreamSource = /*#__PURE__*/function () {\n  function AsyncByteStreamSource(source) {\n    var _this2 = this;\n    _classCallCheck(this, AsyncByteStreamSource);\n    this.source = source;\n    this._closedPromise = new Promise(function (r) {\n      return _this2._closedPromiseResolve = r;\n    });\n  }\n  _createClass(AsyncByteStreamSource, [{\n    key: \"cancel\",\n    value: function () {\n      var _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(reason) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.return(reason);\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function cancel(_x) {\n        return _cancel.apply(this, arguments);\n      }\n      return cancel;\n    }()\n  }, {\n    key: \"closed\",\n    get: function get() {\n      return this._closedPromise;\n    }\n  }, {\n    key: \"read\",\n    value: function () {\n      var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(size) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.next(size, 'read');\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent.value);\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function read(_x2) {\n        return _read.apply(this, arguments);\n      }\n      return read;\n    }()\n  }, {\n    key: \"peek\",\n    value: function () {\n      var _peek = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(size) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.next(size, 'peek');\n            case 2:\n              return _context4.abrupt(\"return\", _context4.sent.value);\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function peek(_x3) {\n        return _peek.apply(this, arguments);\n      }\n      return peek;\n    }()\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(size) {\n        var cmd,\n          _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              cmd = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : 'read';\n              _context5.next = 3;\n              return this.source.next({\n                cmd: cmd,\n                size: size\n              });\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function next(_x4) {\n        return _next.apply(this, arguments);\n      }\n      return next;\n    }()\n  }, {\n    key: \"throw\",\n    value: function () {\n      var _throw2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(value) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.t1 = this.source.throw;\n              if (!_context6.t1) {\n                _context6.next = 5;\n                break;\n              }\n              _context6.next = 4;\n              return this.source.throw(value);\n            case 4:\n              _context6.t1 = _context6.sent;\n            case 5:\n              _context6.t0 = _context6.t1;\n              if (_context6.t0) {\n                _context6.next = 8;\n                break;\n              }\n              _context6.t0 = ITERATOR_DONE;\n            case 8:\n              result = _context6.t0;\n              this._closedPromiseResolve && this._closedPromiseResolve();\n              this._closedPromiseResolve = undefined;\n              return _context6.abrupt(\"return\", Object.create(result));\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function _throw(_x5) {\n        return _throw2.apply(this, arguments);\n      }\n      return _throw;\n    }()\n  }, {\n    key: \"return\",\n    value: function () {\n      var _return2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(value) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.t1 = this.source.return;\n              if (!_context7.t1) {\n                _context7.next = 5;\n                break;\n              }\n              _context7.next = 4;\n              return this.source.return(value);\n            case 4:\n              _context7.t1 = _context7.sent;\n            case 5:\n              _context7.t0 = _context7.t1;\n              if (_context7.t0) {\n                _context7.next = 8;\n                break;\n              }\n              _context7.t0 = ITERATOR_DONE;\n            case 8:\n              result = _context7.t0;\n              this._closedPromiseResolve && this._closedPromiseResolve();\n              this._closedPromiseResolve = undefined;\n              return _context7.abrupt(\"return\", Object.create(result));\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function _return(_x6) {\n        return _return2.apply(this, arguments);\n      }\n      return _return;\n    }()\n  }]);\n  return AsyncByteStreamSource;\n}();","map":{"version":3,"mappings":"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","names":["streamAdapters","decodeUtf8","ITERATOR_DONE","AsyncQueue","toUint8Array","joinUint8Arrays","isPromise","isFetchResponse","isIterable","isAsyncIterable","isReadableDOMStream","isReadableNodeStream","AsyncByteQueue","value","byteLength","sync","then","_values","buffers","chunk","push","ByteStream","source","ByteStreamSource","fromIterable","next","throw","return","size","peek","read","Symbol","iterator","AsyncByteStream","AsyncByteStreamSource","fromAsyncIterable","fromNodeStream","fromDOMStream","body","closed","reason","cancel","asyncIterator","cmd","Object","create","_closedPromise","Promise","r","_closedPromiseResolve","result","undefined"],"sources":["io/stream.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}