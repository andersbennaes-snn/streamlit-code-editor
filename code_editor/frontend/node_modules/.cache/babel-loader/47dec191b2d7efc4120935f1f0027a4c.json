{"ast":null,"code":"var _jsxFileName = \"/home/anasbouzid/code-projects/streamlit/custom-components/CodeEditor/code_editor/frontend/src/CodeEditor.tsx\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport styled from \"styled-components\";\nimport React, { createRef } from \"react\";\nimport * as Icons from \"react-feather\";\nimport AceEditor from \"react-ace\";\nimport ace, { UndoManager } from \"ace-builds\";\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-streamlit_dark\";\nimport \"ace-builds/src-noconflict/theme-streamlit_light\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/ext-prompt\";\nimport \"ace-builds/src-noconflict/ext-modelist\";\nimport \"ace-builds/src-noconflict/ext-keybinding_menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultOptions = {\n  maxLines: 20,\n  minLines: 20,\n  fontFamily: '\"Source Code Pro\", monospace',\n  cursorStyle: \"smooth\",\n  displayIndentGuides: false,\n  wrap: true,\n  highlightActiveLine: true,\n  showPrintMargin: false,\n  showLineNumbers: false,\n  foldStyle: \"markbegin\",\n  autoScrollEditorIntoView: true,\n  animatedScroll: true,\n  fadeFoldWidgets: true\n};\nconst defaultEditorProps = {\n  editorProps: {\n    $blockScrolling: true\n  }\n};\nconst defaultProps = {\n  cursorStart: 1,\n  editorProps: defaultEditorProps,\n  enableBasicAutocompletion: false,\n  enableLiveAutocompletion: true,\n  enableSnippets: true,\n  focus: false,\n  fontSize: 16,\n  highlightActiveLine: true,\n  navigateToFileEnd: true,\n  placeholder: null,\n  readOnly: false,\n  scrollMargin: [15, 15, 0, 0],\n  setOptions: defaultOptions,\n  showGutter: true,\n  showPrintMargin: false,\n  style: {},\n  tabSize: 4,\n  width: \"auto\"\n};\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass CodeEditor extends StreamlitComponentBase {\n  constructor() {\n    var _this;\n    super(...arguments);\n    _this = this;\n    this.defaultUndoManager = new UndoManager();\n    this.state = {\n      code: this.props.args['code'],\n      lang: this.props.args['lang'],\n      isFocused: false,\n      cursorPosition: {\n        row: 0,\n        column: 1\n      },\n      undoManager: this.defaultUndoManager\n    };\n    this.aceEditor = /*#__PURE__*/createRef();\n    this.commands = [{\n      name: 'submit',\n      //name for the key binding.\n      bindKey: {\n        win: 'Ctrl-Enter',\n        mac: 'Command-Enter'\n      },\n      //key combination used for the command.\n      exec: editor => {\n        console.log(\"submit keys pressed\");\n\n        // IMPORTANT: The function `setState()` is required to make sure component state is saved before submit.\n        //            Otherwise changes to the editor and its contents will be lost.\n        this.setState({\n          code: editor.getValue(),\n          cursorPosition: editor.getCursorPosition(),\n          undoManager: editor.getSession().getUndoManager()\n        }, () => {\n          Streamlit.setComponentValue({\n            type: \"submit\",\n            code: editor.getValue()\n          });\n        });\n      }\n    }, {\n      name: 'save-state',\n      bindKey: {\n        win: 'Ctrl-Alt-S',\n        mac: 'Command-Alt-S'\n      },\n      exec: editor => {\n        console.log(\"save state keys pressed\");\n        this.setState({\n          code: editor.getValue(),\n          cursorPosition: editor.getCursorPosition(),\n          undoManager: editor.getSession().getUndoManager(),\n          lang: this.state.lang,\n          isFocused: this.state.isFocused\n        });\n      }\n    }, {\n      name: 'copyAll',\n      exec: editor => {\n        this.unsecureCopyTextToClipboard(editor.getValue());\n      }\n    }, {\n      name: 'reset',\n      exec: () => {\n        this.resetEditor();\n      }\n    }];\n    this.execute = function (command) {\n      var _this$aceEditor$curre;\n      let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n      const editor = (_this$aceEditor$curre = _this.aceEditor.current) === null || _this$aceEditor$curre === void 0 ? void 0 : _this$aceEditor$curre.editor;\n      if (editor) {\n        if (!args) {\n          editor.execCommand(command);\n        } else if (typeof args === \"number\" || typeof args === \"string\") {\n          editor.execCommand(command, args);\n        } else if (typeof args === \"object\" && !Array.isArray(args)) {\n          var containsNumsStr = true;\n          args.values.array.forEach(element => {\n            containsNumsStr = typeof element === \"string\" || typeof element === \"number\" ? containsNumsStr : false;\n          });\n          if (args.values.length < 4 && containsNumsStr) {\n            editor.execCommand(command, args);\n          }\n        } else {\n          console.warn(`failed to execute \"${command}\" command!`);\n        }\n      }\n    };\n    this.executeAll = function (commands) {\n      let sendResponse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n      commands.forEach(command => {\n        if (Array.isArray(command)) {\n          typeof command[0] === \"string\" ? _this.execute(command[0], command[1]) : console.warn(\"improper command format!\");\n        } else if (typeof command === \"string\") {\n          _this.execute(command);\n        } else {\n          console.warn(\"failed to execute command!\");\n        }\n      });\n      if (sendResponse) {\n        _this.respond(sendResponse);\n      }\n    };\n    this.respond = function () {\n      let responseType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"submit\";\n      console.log(\"respond called:\" + responseType);\n      _this.setState(_this.state, () => {\n        Streamlit.setComponentValue({\n          type: responseType,\n          code: _this.state.code\n        });\n      });\n    };\n    this.resetEditor = function () {\n      let keepUndo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      const newUndoManager = keepUndo ? _this.aceEditor.current ? _this.aceEditor.current.editor.getSession().getUndoManager() : _this.state.undoManager : _this.defaultUndoManager;\n      _this.setState({\n        code: _this.props.args['code'],\n        lang: _this.props.args['lang'],\n        isFocused: false,\n        cursorPosition: {\n          row: 0,\n          column: 1\n        },\n        undoManager: newUndoManager\n      });\n    };\n    this.copyToClipboard = async () => {\n      try {\n        await navigator.clipboard.writeText(this.state.code);\n        console.log(this.state.code);\n      } catch (err) {\n        console.warn('Failed to copy securely -> reverting to unsecure copy');\n        this.unsecureCopyToClipboard();\n      }\n    };\n    this.unsecureCopyToClipboard = () => {\n      const textField = document.createElement('textarea');\n      textField.value = this.aceEditor.current ? this.aceEditor.current.editor.getValue() : this.state.code;\n      document.body.appendChild(textField);\n      textField.select();\n      document.execCommand('copy');\n      textField.remove();\n    };\n    this.unsecureCopyTextToClipboard = text => {\n      const textField = document.createElement('textarea');\n      textField.value = text;\n      document.body.appendChild(textField);\n      textField.select();\n      document.execCommand('copy');\n      textField.remove();\n    };\n    this.createSnippets = snippets => {\n      return typeof snippets === \"string\" ? snippets : (Array.isArray(snippets) ? snippets : [snippets]).map(_ref => {\n        let {\n          name,\n          code\n        } = _ref;\n        return ['snippet ' + name, code.split('\\n').map(c => '\\t' + c).join('\\n')].join('\\n');\n      }).join('\\n');\n    };\n    this.handleOnBlur = (event, editor) => {\n      console.log(\"~~onBlur~~\");\n\n      // when user clicks or puts a focus on anything outside the editor, both the relatedTarget and sourceCapabilities\n      // properties of the event object are `Undefined`. This could be due to the fact that the CodeEditor is in an iframe\n      // and therefore cant get the info on whatever is receiving the focus thats outside the iframe.\n      console.log(event);\n      if (event.relatedTarget || event.sourceCapabilities) {\n        this.state = {\n          code: (editor === null || editor === void 0 ? void 0 : editor.getValue()) || this.state.code,\n          cursorPosition: (editor === null || editor === void 0 ? void 0 : editor.getCursorPosition()) || this.state.cursorPosition,\n          undoManager: (editor === null || editor === void 0 ? void 0 : editor.getSession().getUndoManager()) || this.state.undoManager,\n          lang: this.state.lang,\n          isFocused: this.state.isFocused\n        };\n      } else {\n        this.setState({\n          code: (editor === null || editor === void 0 ? void 0 : editor.getValue()) || this.state.code,\n          cursorPosition: (editor === null || editor === void 0 ? void 0 : editor.getCursorPosition()) || this.state.cursorPosition,\n          undoManager: (editor === null || editor === void 0 ? void 0 : editor.getSession().getUndoManager()) || this.state.undoManager,\n          lang: this.state.lang,\n          isFocused: this.state.isFocused\n        });\n      }\n    };\n    this.handleBeforeLoad = Ace => {\n      console.log(\"~before load~\");\n      console.log(this.state);\n      //console.log(ace);\n      console.log(\"~~~~~~~~~~~~~\");\n    };\n    this.handleOnLoad = editor => {\n      console.log(\"~on load~\");\n      ace.require(\"ace/ext/keybinding_menu\").init(editor);\n      console.log(\"is menu attached? =======>\");\n      console.log(this.props.args['code']);\n      console.log(editor);\n      const snippets = this.createSnippets(this.props.args['snippets']);\n      if (snippets) {\n        const snippetManager = ace.require('ace/snippets').snippetManager;\n\n        //// The function getMode() returns an Ace.SyntaxId object that\n        //// has no way to get or access its $id variable. So the following\n        //// doesnt work:\n        //const id = editor.session.getMode().$id;\n\n        //// The current workaround used here is to recognize that when the \n        //// AceEditor mode prop is set with a string (ex: mode=\"python\"), it  \n        //// constructs the mode id as follows: setMode(`ace/mode/${mode}`)\n        //const id = `ace/mode/${this.state.lang}`;\n\n        snippetManager.register(snippetManager.parseSnippetFile(snippets, this.state.lang), this.state.lang);\n        console.log(JSON.stringify(snippets));\n      }\n      editor.getSession().setUndoManager(this.state.undoManager);\n      const cursorPos = this.state.cursorPosition;\n      console.log(cursorPos);\n      editor.moveCursorTo(cursorPos.row, cursorPos.column);\n      editor.renderer.scrollCursorIntoView(cursorPos, 0.5);\n      //editor.resize();\n    };\n    this.render = () => {\n      // // Arguments that are passed to the plugin in Python are accessible\n      // // via `this.props.args`. Here, we access the \"name\" arg.\n\n      const codeEditorProps = this.props.args[\"rootProps\"];\n      const aceEditorProps = {\n        ...defaultEditorProps,\n        ...this.props.args['editorProps']\n      };\n      const aceOptions = {\n        ...defaultOptions,\n        ...this.props.args['options']\n      };\n      const partProps = {\n        setOptions: aceOptions,\n        editorProps: aceEditorProps\n      };\n      const aceProps = {\n        ...defaultProps,\n        ...partProps,\n        ...this.props.args['props']\n      };\n      const customButtons = this.props.args['buttons'];\n      const menudict = this.props.args[\"menu\"];\n      console.log(\"Render----------------\");\n      // Streamlit sends us a theme object via props that we can use to ensure\n      // that our component has visuals that match the active theme in a\n      // streamlit app.\n      console.log(this.state.lang);\n      const {\n        theme\n      } = this.props;\n      const style = {};\n      const editorTheme = this.props.args[\"theme\"];\n      const defaultTheme = theme ? theme.base : \"dark\";\n      var themeProp = \"streamlit_dark\";\n      switch (editorTheme) {\n        case \"contrast\":\n          themeProp = defaultTheme === \"dark\" ? \"streamlit_light\" : \"streamlit_dark\";\n          break;\n        case \"light\":\n          themeProp = \"streamlit_light\";\n          break;\n        case \"dark\":\n          themeProp = \"streamlit_dark\";\n          break;\n        default:\n          themeProp = defaultTheme === \"dark\" ? \"streamlit_dark\" : \"streamlit_light\";\n          break;\n      }\n\n      // console.log(theme?.base);\n\n      style.border = \"none\";\n      style.outline = \"none\";\n      style.top = \"none\";\n      style.bottom = \"none\";\n      style.left = \"none\";\n      style.right = \"none\";\n      style.stroke = theme ? theme.primaryColor : \"rgba(250,250,250,1)\";\n      const StyledCodeEditor = styled.div`\n      border-radius: 8px;\n      overflow: hidden;\n      :hover button {\n        opacity: 1;\n        transform: scale(1);\n      }\n      button.always-on {\n        opacity: 1;\n        transform: scale(1);\n        transition: none;\n      }\n      :hover button svg {\n            opacity: 1;\n            transform: scale(1);\n      }\n      :hover button.with-icon span {\n        opacity: 1;\n        transform: scale(1);\n      }\n      button.always-on > span {\n        opacity: 1;\n        transform: scale(1);\n        transition: none;\n      }\n      button.always-on > svg {\n        opacity: 1;\n        transform: scale(1);\n        transition: none;\n      }\n    `;\n      const StyledDiv = styled.div``;\n      const StyledSpan = styled.span`\n      height: 2.5rem;\n      line-height: 2.5rem;\n      margin: 0px 0.4rem 0.15rem 0.4rem;\n      opacity: 0;\n      transform: scale(0);\n      transition: opacity 300ms 150ms, transform 300ms 150ms;\n    `;\n      const StyledButton = styled.button`\n      border: none;\n      border-radius: 5px;\n      background: none;\n      height: 2.5rem;\n      line-height: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      position: absolute;\n      transform: scale(0);\n      transition: opacity 20ms 300ms, transform 20ms 300ms;\n      top: ${props => props.theme.top || \"\"};\n      left: ${props => props.theme.left || \"\"};\n      right: ${props => props.theme.right || \"\"};\n      bottom: ${props => props.theme.bottom || \"\"};\n      z-index: 101;\n      :focus {\n        outline: none;\n      }\n      span{\n        color: ${themeProp === \"streamlit_dark\" ? \"rgba(250,250,250,0.6)\" : \"rgba(0,0,0,0.5)\"};\n        transform: scale(0);\n        transform-origin: right;\n        transition: opacity 300ms 150ms, transform 300ms 150ms;\n      }\n      :hover span {\n        color: ${props => props.primary ? theme ? theme.primaryColor : \"rgba(250,250,250,1)\" : themeProp === \"streamlit_dark\" ? \"rgb(250,250,250)\" : \"rgb(49, 51, 63)}\"};\n        opacity: 1;\n        transform: scale(1);\n      }\n      svg {\n        stroke: ${themeProp === \"streamlit_dark\" ? \"rgba(250,250,250,0.6)\" : \"rgba(0,0,0,0.5)\"};\n        transform: scale(0);\n        transition: opacity 300ms 150ms, transform 300ms 150ms;\n      }\n      :hover svg {\n        stroke: ${props => props.primary ? theme ? theme.primaryColor : \"rgba(250,250,250,1)\" : themeProp === \"streamlit_dark\" ? \"rgb(250,250,250)\" : \"rgb(49, 51, 63)\"};\n      }\n    `;\n      const creatIcon = function (name) {\n        let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n        const CustomIcon = Icons[name];\n        return /*#__PURE__*/_jsxDEV(CustomIcon, {\n          size: `${size}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 14\n        }, _this);\n      };\n      return /*#__PURE__*/_jsxDEV(StyledCodeEditor, {\n        style: codeEditorProps,\n        className: \"streamlit_code-editor\",\n        children: [/*#__PURE__*/_jsxDEV(AceEditor, {\n          ref: this.aceEditor,\n          name: \"UNIQUE_ID_OF_DIV\",\n          mode: this.state.lang,\n          theme: themeProp,\n          keyboardHandler: this.props.args[\"shortcuts\"],\n          value: this.state.code,\n          onBeforeLoad: this.handleBeforeLoad,\n          onLoad: this.handleOnLoad,\n          onBlur: this.handleOnBlur,\n          commands: this.commands,\n          ...aceProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 9\n        }, this), customButtons ? customButtons.map((button, index) => /*#__PURE__*/_jsxDEV(StyledButton, {\n          primary: button.primary || false,\n          className: (button.class ? button.class : \"\") + (button.alwaysOn ? \" always-on\" : \"\") + (button.showWithIcon ? \" with-icon\" : \"\"),\n          theme: button.theme ? button.theme : {},\n          style: button.style ? button.style : {},\n          onClick: button.commands || button.response ? () => this.executeAll(button.commands || [], button.response) : () => {},\n          children: [button.hasText && button.name ? /*#__PURE__*/_jsxDEV(StyledSpan, {\n            children: button.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 49\n          }, this) : ``, button.feather ? creatIcon(button.feather || \"Copy\", button.iconSize) : \"\"]\n        }, button.name ? button.name : \"regButton\" + index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)) : ``, !menudict ? `` : /*#__PURE__*/_jsxDEV(StyledDiv, {\n          className: \"custom_menu\",\n          style: menudict.menuProps || {},\n          children: !menudict.groups ? `` : menudict.groups.map((group, index) => /*#__PURE__*/_jsxDEV(StyledDiv, {\n            className: \"menu_group \" + group.name,\n            style: group.styleProps || {},\n            children: group.buttons.map((button, index) => /*#__PURE__*/_jsxDEV(StyledButton, {\n              primary: button.primary ? button.primary : false,\n              className: (button.class ? button.class : \"\") + (button.alwaysOn ? \" always-on\" : \"\") + (button.showWithIcon ? \" with-icon\" : \"\"),\n              theme: button.theme || {},\n              style: button.style || {},\n              onClick: button.commands || button.response ? () => this.executeAll(button.commands || [], button.response) : () => {},\n              children: [button.hasText && button.name ? /*#__PURE__*/_jsxDEV(StyledSpan, {\n                children: button.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 55\n              }, this) : ``, button.feather ? creatIcon(button.feather || \"Copy\", button.iconSize) : \"\"]\n            }, button.name ? group.name + \"-\" + button.name : group.name + \"-button\" + index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this))\n          }, group.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this))\n        }, \"menu\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 7\n      }, this);\n    };\n  }\n  //END OF RENDER FUNCTION\n  //----------------------------------------------------------------------\n\n  componentDidMount() {\n    console.log(\"===================\");\n    console.log(\" componentDidMount \");\n    console.log(this.state);\n    super.componentDidMount();\n    console.log(\"===================\");\n  }\n  componentDidUpdate() {\n    console.log(\"--------------------\");\n    console.log(\" componentDidUpdate \");\n    console.log(this.state);\n    super.componentDidUpdate();\n    console.log(\"--------------------\");\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\n\nexport default _c = withStreamlitConnection(CodeEditor);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","styled","React","createRef","Icons","AceEditor","ace","UndoManager","defaultOptions","maxLines","minLines","fontFamily","cursorStyle","displayIndentGuides","wrap","highlightActiveLine","showPrintMargin","showLineNumbers","foldStyle","autoScrollEditorIntoView","animatedScroll","fadeFoldWidgets","defaultEditorProps","editorProps","$blockScrolling","defaultProps","cursorStart","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","focus","fontSize","navigateToFileEnd","placeholder","readOnly","scrollMargin","setOptions","showGutter","style","tabSize","width","CodeEditor","defaultUndoManager","state","code","props","args","lang","isFocused","cursorPosition","row","column","undoManager","aceEditor","commands","name","bindKey","win","mac","exec","editor","console","log","setState","getValue","getCursorPosition","getSession","getUndoManager","setComponentValue","type","unsecureCopyTextToClipboard","resetEditor","execute","command","current","execCommand","Array","isArray","containsNumsStr","values","array","forEach","element","length","warn","executeAll","sendResponse","respond","responseType","keepUndo","newUndoManager","copyToClipboard","navigator","clipboard","writeText","err","unsecureCopyToClipboard","textField","document","createElement","value","body","appendChild","select","remove","text","createSnippets","snippets","map","split","c","join","handleOnBlur","event","relatedTarget","sourceCapabilities","handleBeforeLoad","Ace","handleOnLoad","require","init","snippetManager","register","parseSnippetFile","JSON","stringify","setUndoManager","cursorPos","moveCursorTo","renderer","scrollCursorIntoView","render","codeEditorProps","aceEditorProps","aceOptions","partProps","aceProps","customButtons","menudict","theme","editorTheme","defaultTheme","base","themeProp","border","outline","top","bottom","left","right","stroke","primaryColor","StyledCodeEditor","div","StyledDiv","StyledSpan","span","StyledButton","button","primary","creatIcon","size","CustomIcon","index","class","alwaysOn","showWithIcon","response","hasText","feather","iconSize","menuProps","groups","group","styleProps","buttons","componentDidMount","componentDidUpdate"],"sources":["/home/anasbouzid/code-projects/streamlit/custom-components/CodeEditor/code_editor/frontend/src/CodeEditor.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport styled from \"styled-components\"\nimport React, { ReactNode, createRef } from \"react\"\nimport * as Icons from \"react-feather\"\nimport AceEditor from \"react-ace\";\nimport ace, { UndoManager } from \"ace-builds\";\n\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-streamlit_dark\";\nimport \"ace-builds/src-noconflict/theme-streamlit_light\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/ext-prompt\";\nimport \"ace-builds/src-noconflict/ext-modelist\";\nimport { IAceEditor } from \"react-ace/lib/types\";\nimport \"ace-builds/src-noconflict/ext-keybinding_menu\";\n\ninterface State {\n  code: string\n  lang: string\n  isFocused: boolean\n  undoManager: object\n  cursorPosition: object\n}\n\ninterface customButton {\n  name: string,\n  feather?: string,\n  iconSize?: number,\n  primary?: boolean,\n  hasText?: boolean,\n  showWithIcon?: boolean,\n  alwaysOn?: boolean,\n  commands?: any[],\n  response?: string,\n  class?: string,\n  style?: object,\n  theme?: object\n}\n\ninterface buttonGroup {\n  name: string,\n  styleProps?: object,\n  buttons: customButton[]\n}\n\ninterface menu {\n  menuProps?: object,\n  groups?: buttonGroup[]\n}\n\nconst defaultOptions = {\n  maxLines: 20,\n  minLines: 20,\n  fontFamily: '\"Source Code Pro\", monospace',\n  cursorStyle: \"smooth\",\n  displayIndentGuides: false,\n  wrap: true,\n  highlightActiveLine: true,\n  showPrintMargin: false,\n  showLineNumbers: false,\n  foldStyle: \"markbegin\",\n  autoScrollEditorIntoView: true,\n  animatedScroll: true,\n  fadeFoldWidgets: true,\n}\n\nconst defaultEditorProps = {\n  editorProps: {\n    $blockScrolling: true\n  }\n}\n\nconst defaultProps = {\n  cursorStart: 1,\n  editorProps: defaultEditorProps,\n  enableBasicAutocompletion: false,\n  enableLiveAutocompletion: true,\n  enableSnippets: true,\n  focus: false,\n  fontSize: 16,\n  highlightActiveLine: true,\n  navigateToFileEnd: true,\n  placeholder: null,\n  readOnly: false,\n  scrollMargin: [15,15,0,0],\n  setOptions: defaultOptions,\n  showGutter: true,\n  showPrintMargin: false,\n  style: {},\n  tabSize: 4,\n  width:\"auto\",\n}\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass CodeEditor extends StreamlitComponentBase<State> {\n  private defaultUndoManager = new UndoManager();\n  public state = {code: this.props.args['code'], lang: this.props.args['lang'], isFocused: false, cursorPosition: {row: 0, column: 1}, undoManager: this.defaultUndoManager}\n\n  private aceEditor = createRef<AceEditor>();\n\n  // commands is array of key bindings.\n  private commands = [{   \n                      name: 'submit', //name for the key binding.\n                      bindKey: {win: 'Ctrl-Enter', mac: 'Command-Enter'}, //key combination used for the command.\n                      exec: (editor: ace.Ace.Editor) => {\n                         console.log(\"submit keys pressed\")\n                      \n                         // IMPORTANT: The function `setState()` is required to make sure component state is saved before submit.\n                         //            Otherwise changes to the editor and its contents will be lost.\n                         this.setState({code: editor.getValue(), cursorPosition: editor.getCursorPosition(), undoManager: editor.getSession().getUndoManager()}, () => {Streamlit.setComponentValue({ type: \"submit\", code: editor.getValue()});}); \n                        }\n                      },{\n                      name: 'save-state',\n                      bindKey: {win: 'Ctrl-Alt-S', mac: 'Command-Alt-S'},\n                      exec: (editor: ace.Ace.Editor) => {\n                         console.log(\"save state keys pressed\")\n                         \n                         this.setState({code: editor.getValue(), cursorPosition: editor.getCursorPosition(), undoManager: editor.getSession().getUndoManager(), lang: this.state.lang, isFocused: this.state.isFocused});\n                        }\n                      },{\n                        name: 'copyAll',\n                        exec: (editor: ace.Ace.Editor) => {\n                            this.unsecureCopyTextToClipboard(editor.getValue());  \n                          }\n                        },{\n                          name: 'reset',\n                          exec: () => {\n                              this.resetEditor();  \n                            }\n                          }];\n\n  private execute = (command: string, args: any = \"\") => {\n    const editor = this.aceEditor.current?.editor;\n    if (editor){\n      if (!args){\n        editor.execCommand(command)\n      }\n      else if (typeof args === \"number\" || typeof args === \"string\"){\n        editor.execCommand(command, args);\n      }\n      else if (typeof args === \"object\" && !Array.isArray(args)){\n        var containsNumsStr = true;\n        args.values.array.forEach((element: any) => {\n            containsNumsStr = (typeof element === \"string\" || typeof element === \"number\")? containsNumsStr : false;\n        });\n        if (args.values.length < 4 && containsNumsStr){\n          editor.execCommand(command, args);\n        }\n      }\n      else {\n        console.warn(`failed to execute \"${command}\" command!`);\n      }\n    }\n  }\n\n  private executeAll = (commands: any[], sendResponse = \"\") => {\n    commands.forEach(command => {\n      if (Array.isArray(command)){\n        typeof command[0] === \"string\"? this.execute(command[0], command[1]) : console.warn(\"improper command format!\");\n      } else if (typeof command === \"string\"){\n        this.execute(command);\n      } else {\n        console.warn(\"failed to execute command!\");\n      }\n    });\n\n    if(sendResponse){\n      this.respond(sendResponse);\n    }\n  }\n\n  public respond = (responseType = \"submit\") => {\n    console.log(\"respond called:\" + responseType);\n    this.setState(this.state, () => {Streamlit.setComponentValue({ type: responseType, code: this.state.code});});\n  }\n\n  public resetEditor = (keepUndo = true) => {\n    const newUndoManager = keepUndo? (this.aceEditor.current? this.aceEditor.current.editor.getSession().getUndoManager() : this.state.undoManager ) : this.defaultUndoManager;\n    this.setState({code: this.props.args['code'], lang: this.props.args['lang'], isFocused: false, cursorPosition: {row: 0, column: 1}, undoManager: newUndoManager});\n  }\n\n  /**\n   * This method for copying to clipboard uses the \n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API Clipboard API}\n   * which makes use of the asynchronous clipboard read and write methods \n   * and requires that the user grant the web site or app permission to\n   * access the clipboard. The latter can be an issue for streamlit because\n   * it uses http instead of https. \n   * */\n  public copyToClipboard = async (): Promise<void> => {\n    try {\n      await navigator.clipboard.writeText(this.state.code);\n      console.log(this.state.code);\n    } catch (err) {\n      console.warn('Failed to copy securely -> reverting to unsecure copy');\n      this.unsecureCopyToClipboard();\n    }\n  }\n\n  /**\n   * This method for copying to clipboard uses .execCommand method\n   * which is depreciated but still supported by most browsers. This\n   * is the same approach for copying that Streamlit's built in CodeBlock\n   * component uses.\n   **/\n  private unsecureCopyToClipboard = () => {\n    const textField = document.createElement('textarea');\n    textField.value = this.aceEditor.current? this.aceEditor.current.editor.getValue() : this.state.code;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand('copy');\n    textField.remove();\n  }\n\n  private unsecureCopyTextToClipboard = (text: string) => {\n    const textField = document.createElement('textarea');\n    textField.value = text;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand('copy');\n    textField.remove();\n  }\n\n  /**\n   * This function takes as input either a snippetText string that is expected\n   * to be already formatted like the text in a SnippetFile or a dictionary or \n   * and array of dictionaries. For the first case, it just returns the input.\n   * For the second and third case, a (SnippetFile format) string is constructed\n   * from the dict(s) and returned. Learn more about snippets {@link  here}\n   * @param snippets snippets to be converted to a single snippetText string\n   * @returns {string} snippetText\n   */\n  private createSnippets = (snippets: string | object | [object]) : string => {\n    return( typeof snippets === \"string\" ? snippets : (Array.isArray(snippets) ? snippets : [snippets]).map(({ name, code }) =>\n        ([\n            'snippet ' + name,\n            code.split('\\n')\n                .map((c: string) => '\\t' + c)\n                .join('\\n'),\n        ].join('\\n'))\n    ).join('\\n'))\n  }\n\n  /** \n   * IMPORTANT!! This function calls CodeEditor's `setState` function whenever user clicks anywhere\n   * outside the CodeEditor component but not inside. The reason for this is because onBlur events inside CodeEditor\n   * can result in changes you want to keep, so calling setState before those changes are \n   * processed leads to the changes being lost.\n   * @param editor the editor that lost the focus\n   * @param event the blur event\n   * */\n  private handleOnBlur = (event: any, editor: IAceEditor) => {\n    console.log(\"~~onBlur~~\");\n    \n    // when user clicks or puts a focus on anything outside the editor, both the relatedTarget and sourceCapabilities\n    // properties of the event object are `Undefined`. This could be due to the fact that the CodeEditor is in an iframe\n    // and therefore cant get the info on whatever is receiving the focus thats outside the iframe.\n    console.log(event)\n    if(event.relatedTarget || event.sourceCapabilities){\n      this.state = {code: editor?.getValue() || this.state.code, cursorPosition: editor?.getCursorPosition() || this.state.cursorPosition, undoManager: editor?.getSession().getUndoManager() || this.state.undoManager, lang: this.state.lang, isFocused: this.state.isFocused}\n    } else {\n      this.setState({code: editor?.getValue() || this.state.code, cursorPosition: editor?.getCursorPosition() || this.state.cursorPosition, undoManager: editor?.getSession().getUndoManager() || this.state.undoManager, lang: this.state.lang, isFocused: this.state.isFocused});\n    }\n  }\n\n  private handleBeforeLoad = (Ace: typeof ace) => {\n    console.log(\"~before load~\");\n    console.log(this.state);\n    //console.log(ace);\n    console.log(\"~~~~~~~~~~~~~\")\n  }\n\n  private handleOnLoad = (editor: ace.Ace.Editor) => {\n    console.log(\"~on load~\");\n\n    ace.require(\"ace/ext/keybinding_menu\").init(editor);\n    console.log(\"is menu attached? =======>\");\n    console.log(this.props.args['code']);\n    console.log(editor);\n    \n    const snippets = this.createSnippets(this.props.args['snippets']);\n    if(snippets){\n      const snippetManager = ace.require('ace/snippets').snippetManager;\n      \n      //// The function getMode() returns an Ace.SyntaxId object that\n      //// has no way to get or access its $id variable. So the following\n      //// doesnt work:\n      //const id = editor.session.getMode().$id;\n\n      //// The current workaround used here is to recognize that when the \n      //// AceEditor mode prop is set with a string (ex: mode=\"python\"), it  \n      //// constructs the mode id as follows: setMode(`ace/mode/${mode}`)\n      //const id = `ace/mode/${this.state.lang}`;\n\n      snippetManager.register(snippetManager.parseSnippetFile(snippets, this.state.lang), this.state.lang)\n      console.log(JSON.stringify(snippets))\n    }\n\n    editor.getSession().setUndoManager(this.state.undoManager);\n\n    const cursorPos = this.state.cursorPosition;\n    console.log(cursorPos);\n    editor.moveCursorTo(cursorPos.row, cursorPos.column);\n    editor.renderer.scrollCursorIntoView(cursorPos, 0.5);\n    //editor.resize();\n  }\n\n  //-------------------------------------------------------------------------\n  // RENDER FUNCTION\n  public render = (): ReactNode => {\n    // // Arguments that are passed to the plugin in Python are accessible\n    // // via `this.props.args`. Here, we access the \"name\" arg.\n    \n    const codeEditorProps = this.props.args[\"rootProps\"]\n    const aceEditorProps = {...defaultEditorProps, ...this.props.args['editorProps']};\n    const aceOptions = {...defaultOptions, ...this.props.args['options']}\n    const partProps = {setOptions: aceOptions, editorProps: aceEditorProps}\n    const aceProps = {...defaultProps, ...partProps, ...this.props.args['props']}\n\n    const customButtons = this.props.args['buttons'] as customButton[];\n    const menudict = this.props.args[\"menu\"] as menu;\n\n    console.log(\"Render----------------\");\n    // Streamlit sends us a theme object via props that we can use to ensure\n    // that our component has visuals that match the active theme in a\n    // streamlit app.\n    console.log(this.state.lang)\n\n    const { theme } = this.props\n    const style: React.CSSProperties = {}\n    \n    const editorTheme = this.props.args[\"theme\"];\n    const defaultTheme = theme? theme.base : \"dark\";\n    var themeProp = \"streamlit_dark\";\n    switch (editorTheme) {\n      case \"contrast\":\n        themeProp = (defaultTheme === \"dark\")? \"streamlit_light\" : \"streamlit_dark\";\n        break;\n      case \"light\":\n        themeProp = \"streamlit_light\";\n        break;\n      case \"dark\":\n        themeProp = \"streamlit_dark\";\n        break;\n      default:\n        themeProp = (defaultTheme === \"dark\")? \"streamlit_dark\" : \"streamlit_light\";\n        break;\n    }\n\n    // console.log(theme?.base);\n\n    style.border = \"none\";\n    style.outline = \"none\";\n    style.top = \"none\";\n    style.bottom = \"none\";\n    style.left = \"none\";\n    style.right = \"none\";\n    style.stroke = theme? theme.primaryColor : \"rgba(250,250,250,1)\";\n\n    const StyledCodeEditor = styled.div`\n      border-radius: 8px;\n      overflow: hidden;\n      :hover button {\n        opacity: 1;\n        transform: scale(1);\n      }\n      button.always-on {\n        opacity: 1;\n        transform: scale(1);\n        transition: none;\n      }\n      :hover button svg {\n            opacity: 1;\n            transform: scale(1);\n      }\n      :hover button.with-icon span {\n        opacity: 1;\n        transform: scale(1);\n      }\n      button.always-on > span {\n        opacity: 1;\n        transform: scale(1);\n        transition: none;\n      }\n      button.always-on > svg {\n        opacity: 1;\n        transform: scale(1);\n        transition: none;\n      }\n    `;\n\n    const StyledDiv = styled.div``;\n\n    const StyledSpan = styled.span`\n      height: 2.5rem;\n      line-height: 2.5rem;\n      margin: 0px 0.4rem 0.15rem 0.4rem;\n      opacity: 0;\n      transform: scale(0);\n      transition: opacity 300ms 150ms, transform 300ms 150ms;\n    `;\n    \n    const StyledButton = styled.button<{primary: boolean}>`\n      border: none;\n      border-radius: 5px;\n      background: none;\n      height: 2.5rem;\n      line-height: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      position: absolute;\n      transform: scale(0);\n      transition: opacity 20ms 300ms, transform 20ms 300ms;\n      top: ${props => props.theme.top || \"\"};\n      left: ${props => props.theme.left || \"\"};\n      right: ${props => props.theme.right || \"\"};\n      bottom: ${props => props.theme.bottom || \"\"};\n      z-index: 101;\n      :focus {\n        outline: none;\n      }\n      span{\n        color: ${themeProp === \"streamlit_dark\"? \"rgba(250,250,250,0.6)\": \"rgba(0,0,0,0.5)\"};\n        transform: scale(0);\n        transform-origin: right;\n        transition: opacity 300ms 150ms, transform 300ms 150ms;\n      }\n      :hover span {\n        color: ${props => props.primary? theme? theme.primaryColor : \"rgba(250,250,250,1)\" : themeProp === \"streamlit_dark\"? \"rgb(250,250,250)\" : \"rgb(49, 51, 63)}\"};\n        opacity: 1;\n        transform: scale(1);\n      }\n      svg {\n        stroke: ${themeProp === \"streamlit_dark\"? \"rgba(250,250,250,0.6)\": \"rgba(0,0,0,0.5)\"};\n        transform: scale(0);\n        transition: opacity 300ms 150ms, transform 300ms 150ms;\n      }\n      :hover svg {\n        stroke: ${props => props.primary? theme? theme.primaryColor : \"rgba(250,250,250,1)\" : themeProp === \"streamlit_dark\"? \"rgb(250,250,250)\": \"rgb(49, 51, 63)\"};\n      }\n    `;\n\n    type iconKey = keyof typeof Icons;\n    const creatIcon = (name: iconKey, size = 16) => {\n      const CustomIcon = Icons[name];\n      return <CustomIcon size={`${size}`} />;\n    }\n\n    return (\n      <StyledCodeEditor style={codeEditorProps} className=\"streamlit_code-editor\">\n        <AceEditor\n          ref={this.aceEditor}\n          name=\"UNIQUE_ID_OF_DIV\"\n          mode={this.state.lang}\n          theme={themeProp}\n          keyboardHandler={this.props.args[\"shortcuts\"]}\n          value={this.state.code}\n          onBeforeLoad={this.handleBeforeLoad}\n          onLoad={this.handleOnLoad}\n          onBlur={this.handleOnBlur}\n          commands={this.commands}\n          {...aceProps}\n        />      \n        {customButtons?customButtons.map( (button, index) => (\n          <StyledButton \n            primary={button.primary || false}\n            key={button.name? button.name : \"regButton\" + index} \n            className={(button.class? button.class: \"\" ) + (button.alwaysOn? \" always-on\" : \"\") + (button.showWithIcon? \" with-icon\" : \"\")}\n            theme={button.theme? button.theme : {}}\n            style={button.style? button.style : {}} \n            onClick={(button.commands || button.response)? () => this.executeAll(button.commands || [], button.response) : () => {}}>\n              {(button.hasText && button.name)? <StyledSpan >{button.name}</StyledSpan> : ``}\n              {button.feather? creatIcon(button.feather as iconKey || \"Copy\", button.iconSize) : \"\"}\n          </StyledButton>\n         )) : ``}\n        {!menudict? ``: <StyledDiv key=\"menu\" className=\"custom_menu\" style={menudict.menuProps || {}}>\n          {!menudict.groups? `` : menudict.groups.map((group: buttonGroup, index) => (\n            <StyledDiv key={group.name} className={\"menu_group \" + group.name} style={group.styleProps || {}}>\n              {group.buttons.map((button: customButton, index)=>(\n                <StyledButton \n                  primary={button.primary? button.primary : false}\n                  key={button.name? group.name + \"-\" + button.name : group.name + \"-button\" + index} \n                  className={(button.class? button.class: \"\" ) + (button.alwaysOn? \" always-on\" : \"\")+ (button.showWithIcon? \" with-icon\" : \"\")}\n                  theme={button.theme || {}} \n                  style={button.style || {}}\n                  onClick={(button.commands || button.response)? () => this.executeAll(button.commands || [], button.response) : () => {}}>\n                    {(button.hasText && button.name)? <StyledSpan>{button.name}</StyledSpan> : ``}\n                    {button.feather? creatIcon(button.feather as iconKey || \"Copy\", button.iconSize) : \"\"}\n              </StyledButton>\n              ))}\n            </StyledDiv>\n          ))}\n        </StyledDiv>\n        }\n      </StyledCodeEditor>\n    )\n  }\n  //END OF RENDER FUNCTION\n  //----------------------------------------------------------------------\n\n  public componentDidMount(): void {\n    console.log(\"===================\");\n    console.log(\" componentDidMount \");\n    console.log(this.state)\n    super.componentDidMount();\n    console.log(\"===================\")\n  }\n  \n  public componentDidUpdate(): void {\n    console.log(\"--------------------\");\n    console.log(\" componentDidUpdate \")\n    console.log(this.state);\n    super.componentDidUpdate();\n    console.log(\"--------------------\");\n  }\n}\n  \n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\n\nexport default withStreamlitConnection(CodeEditor)"],"mappings":"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"},"metadata":{},"sourceType":"module"}